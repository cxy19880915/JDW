C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/10/2018 21:54:07 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          #include "config.h"
   3          
   4          void  NPCA110P_VOL(void);
   5          void  NPCA110P_SOURCE(void);
   6          extern  UINT8 VOL_LED;
   7          extern  bit led_flag;
   8          extern  bit led_flag,flag_m,flag_s;
   9          extern  void  delay(void);
  10          //extern  void  GPIO_MUTE(void);
  11          extern const unsigned char code g_abMax1xDSPCommands[];
  12          extern const unsigned char code g_abMax2xDSPCommands[];
  13          extern const unsigned char code g_abMax3xDSPCommands[];
  14          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
  15          void  NPCA110P_SOURCE(void);
  16          #define   NPCA110P_EEPROM_SLA     0xe6
  17          
  18          UINT8 source_in = 1,mode_in = 2,VOL_level = 15;
  19          extern  UINT16 sys_flag;
  20          
  21          //模拟输入通道切换命令：
  22          const unsigned char code channel_Commands[] = 
  23          {
  24          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  25          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  26          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  27          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  28                                          
  29          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  30          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  31          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  32          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  33                                          
  34          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  35          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  36          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  37          0xFF,0xAD,0x86,   0x00,0x00,0x00
  38          };     
  39          unsigned char volume_Control[] = 
  40          {
  41            0x01, 0xd0, 0x9a
  42          }; 
  43             
  44          void  NPCA110P_init(void)
  45          {
  46   1        int i;
  47   1      //  source_in = 1,mode_in = 1;
  48   1      //  GPIO_MUTE();
  49   1      //  MUTE = 1;
  50   1      //  if(!MUTE){MUTE = 1;flag_s = 1;flag_m = 1;}
  51   1        sys_flag = sys_flag | sys_source;
  52   1      //  source_in--;
  53   1        NPCA110P_SOURCE();
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/10/2018 21:54:07 PAGE 2   

  54   1        switch(mode_in)
  55   1        {
  56   2          case  1:
  57   2              for(i=0;i<308;i++)
  58   2              {
  59   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
  60   3                delay();
  61   3              }
  62   2              break;
  63   2          case  2:
  64   2              for(i=0;i<308;i++)
  65   2              {
  66   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax2xDSPCommands+i*3),3);//924);
  67   3                delay();
  68   3              }
  69   2              break;    
  70   2          case  3:
  71   2              for(i=0;i<308;i++)
  72   2              {
  73   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax3xDSPCommands+i*3),3);//924);
  74   3                delay();
  75   3              }
  76   2              break;    
  77   2          default:
  78   2            break;
  79   2        }
  80   1        
  81   1      
  82   1        
  83   1        NPCA110P_VOL();
  84   1      //  if((flag_s)||(flag_m)){MUTE = 0;flag_s = 0;flag_m = 0;}
  85   1      //  MUTE = 0;
  86   1      //  source_in--;
  87   1      //  NPCA110P_SOURCE();
  88   1      //  GPIO_MUTE();
  89   1      }
  90          void  NPCA110P_VOL(void)
  91          {
  92   1        switch(VOL_level)
  93   1        {
  94   2          case  0:
  95   2      //      GPIO_MUTE();
  96   2            volume_Control[0]=0x00;
  97   2            volume_Control[2]=0x00;
  98   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  99   2            break;
 100   2          
 101   2          case  1:
 102   2      //      GPIO_MUTE();
 103   2            volume_Control[0]=0x00;
 104   2            volume_Control[2]=0x55;
 105   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 106   2            break;
 107   2          
 108   2          case  2:
 109   2            volume_Control[0]=0x00;
 110   2            volume_Control[2]=0x69;
 111   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 112   2            break;
 113   2          
 114   2          case  3:
 115   2            volume_Control[0]=0x00;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/10/2018 21:54:07 PAGE 3   

 116   2            volume_Control[2]=0x9a;
 117   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 118   2            break;
 119   2          
 120   2          case  4:
 121   2            volume_Control[0]=0x00;
 122   2            volume_Control[2]=0xcd;
 123   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 124   2            break;
 125   2          
 126   2          case  5:
 127   2            volume_Control[0]=0x00;
 128   2            volume_Control[2]=0xff;
 129   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 130   2            break;
 131   2          
 132   2          case  6:
 133   2            volume_Control[0]=0x01;
 134   2            volume_Control[2]=0x18;
 135   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 136   2            break;
 137   2          
 138   2          case  7:
 139   2            volume_Control[0]=0x01;
 140   2            volume_Control[2]=0x31;
 141   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 142   2            break;
 143   2          
 144   2          case  8:
 145   2            volume_Control[0]=0x01;
 146   2            volume_Control[2]=0x36;
 147   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 148   2            break;
 149   2          
 150   2          case  9:
 151   2            volume_Control[0]=0x01;
 152   2            volume_Control[2]=0x3b;
 153   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 154   2            break;
 155   2          
 156   2          case  10:
 157   2            volume_Control[0]=0x01;
 158   2            volume_Control[2]=0x40;
 159   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 160   2            break;
 161   2          
 162   2          case  11:
 163   2            volume_Control[0]=0x01;
 164   2            volume_Control[2]=0x45;
 165   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 166   2            break;
 167   2          
 168   2          case  12:
 169   2            volume_Control[0]=0x01;
 170   2            volume_Control[2]=0x4a;
 171   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 172   2            break;
 173   2          
 174   2          case  13:
 175   2            volume_Control[0]=0x01;
 176   2            volume_Control[2]=0x4f;
 177   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/10/2018 21:54:07 PAGE 4   

 178   2            break;
 179   2          
 180   2          case  14:
 181   2            volume_Control[0]=0x01;
 182   2            volume_Control[2]=0x54;
 183   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 184   2            break;
 185   2          
 186   2          case  15:
 187   2            volume_Control[0]=0x01;
 188   2            volume_Control[2]=0x59;
 189   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 190   2            break;
 191   2          
 192   2          case  16:
 193   2            volume_Control[0]=0x01;
 194   2            volume_Control[2]=0x5e;
 195   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 196   2            break;
 197   2          
 198   2          case  17:
 199   2            volume_Control[0]=0x01;
 200   2            volume_Control[2]=0x63;
 201   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 202   2            break;
 203   2          
 204   2          case  18:
 205   2            volume_Control[0]=0x01;
 206   2            volume_Control[2]=0x68;
 207   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 208   2            break;
 209   2          
 210   2          case  19:
 211   2            volume_Control[0]=0x01;
 212   2            volume_Control[2]=0x6d;
 213   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 214   2            break;
 215   2          
 216   2          case  20:
 217   2            volume_Control[0]=0x01;
 218   2            volume_Control[2]=0x72;
 219   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 220   2            break;
 221   2          
 222   2          case  21:
 223   2            volume_Control[0]=0x01;
 224   2            volume_Control[2]=0x77;
 225   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 226   2            break;
 227   2          
 228   2          case  22:
 229   2            volume_Control[0]=0x01;
 230   2            volume_Control[2]=0x7c;
 231   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 232   2            break;
 233   2          
 234   2          case  23:
 235   2            volume_Control[0]=0x01;
 236   2            volume_Control[2]=0x81;
 237   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 238   2            break;
 239   2          
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/10/2018 21:54:07 PAGE 5   

 240   2          case  24:
 241   2            volume_Control[0]=0x01;
 242   2            volume_Control[2]=0x86;
 243   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 244   2            break;
 245   2          
 246   2          case  25:
 247   2            volume_Control[0]=0x01;
 248   2            volume_Control[2]=0x8b;
 249   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 250   2            break;
 251   2          
 252   2          case  26:
 253   2            volume_Control[0]=0x01;
 254   2            volume_Control[2]=0x90;
 255   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 256   2            break;
 257   2          
 258   2          case  27:
 259   2            volume_Control[0]=0x01;
 260   2            volume_Control[2]=0x95;
 261   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 262   2            break;
 263   2          
 264   2          case  28:
 265   2            volume_Control[0]=0x01;
 266   2            volume_Control[2]=0x9a;
 267   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 268   2            break;
 269   2          
 270   2          case  29:
 271   2            volume_Control[0]=0x01;
 272   2            volume_Control[2]=0x9f;
 273   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 274   2            break;
 275   2          
 276   2          case  30:
 277   2            volume_Control[0]=0x01;
 278   2            volume_Control[2]=0x9f;
 279   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 280   2            break;
 281   2          
 282   2        }
 283   1      }
 284          //void  NPCA110P_VOL_B(void)
 285          //{
 286          //  VOL_LED = 1;
 287          //  if(volume_Control[2]<=0x00)
 288          //  {
 289          //    VOL_LED = 0;
 290          //    led_flag = 0;
 291          //    return;
 292          //  }
 293          //  if(volume_Control[2]<6)volume_Control[2]=6;
 294          //  volume_Control[2]=volume_Control[2]-6;
 295          ////  volume_Control[5]--;
 296          //  I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 297          //}
 298          void  NPCA110P_MUTE(void)
 299          {
 300   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
 301   1      }
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/10/2018 21:54:07 PAGE 6   

 302          void  NPCA110P_MODE(void)
 303          {
 304   1      //  mode_in++;
 305   1      //  if(mode_in>3)mode_in = 1;
 306   1      //  if(!MUTE){MUTE = 1;flag_m = 1;}
 307   1        NPCA110P_init();
 308   1      //  if(flag_m){MUTE = 0;flag_s = 0;flag_m = 0;}
 309   1      }
 310          void  NPCA110P_SOURCE(void)
 311          {
 312   1        UINT8 i;
 313   1      //  if(!MUTE){MUTE = 1;flag_s = 1;flag_m = 1;}
 314   1        if(source_in==1)  
 315   1          for(i=0;i<8;i++)
 316   1          {
 317   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
 318   2            delay();delay();
 319   2          }
 320   1        else  if(source_in==2)  
 321   1          for(i=0;i<8;i++)
 322   1          {
 323   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
 324   2            delay();delay();
 325   2          }
 326   1        else  if(source_in==3)  
 327   1        {
 328   2          for(i=0;i<8;i++)
 329   2          {
 330   3            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
 331   3            delay();delay();
 332   3          }   
 333   2        }
 334   1      //  if(flag_s){MUTE = 0;flag_s = 0;flag_m = 0;}
 335   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    942    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
