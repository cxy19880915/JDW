C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 17:20:15 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          #include "config.h"
   3          
   4          extern  UINT8 VOL_LED;
   5          extern  bit led_flag;
   6          extern  void  delay(void);
   7          extern  void  GPIO_MUTE(void);
   8          extern const unsigned char code g_abMax1xDSPCommands[];
   9          extern const unsigned char code g_abMax2xDSPCommands[];
  10          extern const unsigned char code g_abMax3xDSPCommands[];
  11          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
  12          void  NPCA110P_SOURCE(void);
  13          #define   NPCA110P_EEPROM_SLA     0xe6
  14          
  15          UINT8 source_in = 1,mode_in = 1,VOL_level = 15;
  16          
  17          //模拟输入通道切换命令：
  18          const unsigned char code channel_Commands[] = 
  19          {
  20          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  21          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  22          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  23          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  24                                          
  25          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  26          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  27          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  28          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  29                                          
  30          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  31          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  32          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  33          0xFF,0xAD,0x86,   0x00,0x00,0x00
  34          };     
  35          unsigned char volume_Control[] = 
  36          {
  37            0x01, 0xd0, 0x9a
  38          }; 
  39             
  40          void  NPCA110P_init(void)
  41          {
  42   1        int i;
  43   1      //  source_in = 1,mode_in = 1;
  44   1      //  GPIO_MUTE();
  45   1        switch(mode_in)
  46   1        {
  47   2          case  1:
  48   2              for(i=0;i<308;i++)
  49   2              {
  50   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
  51   3                delay();
  52   3              }
  53   2              break;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 17:20:15 PAGE 2   

  54   2          case  2:
  55   2              for(i=0;i<308;i++)
  56   2              {
  57   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax2xDSPCommands+i*3),3);//924);
  58   3                delay();delay();
  59   3              }
  60   2              break;    
  61   2          case  3:
  62   2              for(i=0;i<308;i++)
  63   2              {
  64   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax3xDSPCommands+i*3),3);//924);
  65   3                delay();delay();
  66   3              }
  67   2              break;    
  68   2          default:
  69   2            break;
  70   2        }
  71   1      //  source_in--;
  72   1      //  NPCA110P_SOURCE();
  73   1      //  GPIO_MUTE();
  74   1      }
  75          void  NPCA110P_VOL(void)
  76          {
  77   1        switch(VOL_level)
  78   1        {
  79   2          case  0:
  80   2            volume_Control[2]=0x9a;
  81   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  82   2            break;
  83   2          
  84   2          case  1:
  85   2            volume_Control[2]=0x9a;
  86   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  87   2            break;
  88   2          
  89   2          case  2:
  90   2            volume_Control[2]=0x9a;
  91   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  92   2            break;
  93   2          
  94   2          case  3:
  95   2            volume_Control[2]=0x9a;
  96   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  97   2            break;
  98   2          
  99   2          case  4:
 100   2            volume_Control[2]=0x9a;
 101   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 102   2            break;
 103   2          
 104   2          case  5:
 105   2            volume_Control[2]=0x9a;
 106   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 107   2            break;
 108   2          
 109   2          case  6:
 110   2            volume_Control[2]=0x9a;
 111   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 112   2            break;
 113   2          
 114   2          case  7:
 115   2            volume_Control[2]=0x9a;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 17:20:15 PAGE 3   

 116   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 117   2            break;
 118   2          
 119   2          case  8:
 120   2            volume_Control[2]=0x9a;
 121   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 122   2            break;
 123   2          
 124   2          case  9:
 125   2            volume_Control[2]=0x9a;
 126   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 127   2            break;
 128   2          
 129   2          case  10:
 130   2            volume_Control[2]=0x9a;
 131   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 132   2            break;
 133   2          
 134   2          case  11:
 135   2            volume_Control[2]=0x9a;
 136   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 137   2            break;
 138   2          
 139   2          case  12:
 140   2            volume_Control[2]=0x9a;
 141   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 142   2            break;
 143   2          
 144   2          case  13:
 145   2            volume_Control[2]=0x9a;
 146   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 147   2            break;
 148   2          
 149   2          case  14:
 150   2            volume_Control[2]=0x9a;
 151   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 152   2            break;
 153   2          
 154   2          case  15:
 155   2            volume_Control[2]=0x9a;
 156   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 157   2            break;
 158   2          
 159   2          case  16:
 160   2            volume_Control[2]=0x9a;
 161   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 162   2            break;
 163   2          
 164   2          case  17:
 165   2            volume_Control[2]=0x9a;
 166   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 167   2            break;
 168   2          
 169   2          case  18:
 170   2            volume_Control[2]=0x9a;
 171   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 172   2            break;
 173   2          
 174   2          case  19:
 175   2            volume_Control[2]=0x9a;
 176   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 177   2            break;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 17:20:15 PAGE 4   

 178   2          
 179   2          case  20:
 180   2            volume_Control[2]=0x9a;
 181   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 182   2            break;
 183   2          
 184   2          case  21:
 185   2            volume_Control[2]=0x9a;
 186   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 187   2            break;
 188   2          
 189   2          case  22:
 190   2            volume_Control[2]=0x9a;
 191   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 192   2            break;
 193   2          
 194   2          case  23:
 195   2            volume_Control[2]=0x9a;
 196   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 197   2            break;
 198   2          
 199   2          case  24:
 200   2            volume_Control[2]=0x9a;
 201   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 202   2            break;
 203   2          
 204   2          case  25:
 205   2            volume_Control[2]=0x9a;
 206   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 207   2            break;
 208   2          
 209   2          case  26:
 210   2            volume_Control[2]=0x9a;
 211   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 212   2            break;
 213   2          
 214   2          case  27:
 215   2            volume_Control[2]=0x9a;
 216   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 217   2            break;
 218   2          
 219   2          case  28:
 220   2            volume_Control[2]=0x9a;
 221   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 222   2            break;
 223   2          
 224   2          case  29:
 225   2            volume_Control[2]=0x9a;
 226   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 227   2            break;
 228   2          
 229   2          case  30:
 230   2            volume_Control[2]=0x9a;
 231   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 232   2            break;
 233   2          
 234   2        }
 235   1      }
 236          //void  NPCA110P_VOL_B(void)
 237          //{
 238          //  VOL_LED = 1;
 239          //  if(volume_Control[2]<=0x00)
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 17:20:15 PAGE 5   

 240          //  {
 241          //    VOL_LED = 0;
 242          //    led_flag = 0;
 243          //    return;
 244          //  }
 245          //  if(volume_Control[2]<6)volume_Control[2]=6;
 246          //  volume_Control[2]=volume_Control[2]-6;
 247          ////  volume_Control[5]--;
 248          //  I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 249          //}
 250          void  NPCA110P_MUTE(void)
 251          {
 252   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
 253   1      }
 254          void  NPCA110P_MODE(void)
 255          {
 256   1      //  mode_in++;
 257   1      //  if(mode_in>3)mode_in = 1;
 258   1        NPCA110P_init();
 259   1      }
 260          void  NPCA110P_SOURCE(void)
 261          {
 262   1        UINT8 i;
 263   1        if(source_in==1)  
 264   1          for(i=0;i<8;i++)
 265   1          {
 266   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
 267   2            delay();delay();
 268   2          }
 269   1        else  if(source_in==2)  
 270   1          for(i=0;i<8;i++)
 271   1          {
 272   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
 273   2            delay();delay();
 274   2          }
 275   1        else  if(source_in==3)  
 276   1        {
 277   2          for(i=0;i<8;i++)
 278   2          {
 279   3            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
 280   3            delay();delay();
 281   3          }   
 282   2        }
 283   1      
 284   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    523    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
