C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 10:43:49 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          #include "config.h"
   3          
   4          extern  UINT8 VOL_LED;
   5          extern  bit led_flag;
   6          extern  void Timer0_Delay1ms(UINT32 u32CNT);
   7          extern  void  GPIO_MUTE(void);
   8          extern const unsigned char code g_abMax1xDSPCommands[];
   9          extern const unsigned char code g_abMax2xDSPCommands[];
  10          extern const unsigned char code g_abMax3xDSPCommands[];
  11          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
  12          void  NPCA110P_SOURCE(void);
  13          #define   NPCA110P_EEPROM_SLA     0xe6
  14          
  15          UINT8 source_in = 1,mode_in = 1,VOL_level = 15;
  16          
  17          //模拟输入通道切换命令：
  18          const unsigned char code channel_Commands[] = 
  19          {
  20          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  21          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  22          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  23          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  24                                          
  25          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  26          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  27          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  28          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  29                                          
  30          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  31          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  32          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  33          0xFF,0xAD,0x86,   0x00,0x00,0x00
  34          };     
  35          unsigned char volume_Control[] = 
  36          {
  37            0x01, 0xd0, 0x9a
  38          }; 
  39             
  40          void  NPCA110P_init(void)
  41          {
  42   1        int i;
  43   1      //  source_in = 1,mode_in = 1;
  44   1        GPIO_MUTE();
  45   1        switch(mode_in)
  46   1        {
  47   2          case  1:
  48   2              for(i=0;i<308;i++)
  49   2              {
  50   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
  51   3                Timer0_Delay1ms(1);
  52   3              }
  53   2              break;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 10:43:49 PAGE 2   

  54   2          case  2:
  55   2              for(i=0;i<308;i++)
  56   2              {
  57   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax2xDSPCommands+i*3),3);//924);
  58   3                Timer0_Delay1ms(1);
  59   3              }
  60   2              break;    
  61   2          case  3:
  62   2              for(i=0;i<308;i++)
  63   2              {
  64   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax3xDSPCommands+i*3),3);//924);
  65   3                Timer0_Delay1ms(1);
  66   3              }
  67   2              break;    
  68   2          default:
  69   2            break;
  70   2        }
  71   1        source_in--;
  72   1        NPCA110P_SOURCE();
  73   1        GPIO_MUTE();
  74   1      }
  75          void  NPCA110P_VOL_A(void)
  76          {
  77   1        VOL_LED = 1;
  78   1        if(volume_Control[2]>=0xf3)
  79   1        {
  80   2          VOL_LED = 0;
  81   2          led_flag = 0;
  82   2          return;
  83   2        }
  84   1        volume_Control[2]=volume_Control[2]+6;
  85   1      //  volume_Control[5]++;
  86   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  87   1      }
  88          void  NPCA110P_VOL_B(void)
  89          {
  90   1        VOL_LED = 1;
  91   1        if(volume_Control[2]<=0x00)
  92   1        {
  93   2          VOL_LED = 0;
  94   2          led_flag = 0;
  95   2          return;
  96   2        }
  97   1        if(volume_Control[2]<6)volume_Control[2]=6;
  98   1        volume_Control[2]=volume_Control[2]-6;
  99   1      //  volume_Control[5]--;
 100   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 101   1      }
 102          void  NPCA110P_MUTE(void)
 103          {
 104   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
 105   1      }
 106          void  NPCA110P_MODE(void)
 107          {
 108   1      //  mode_in++;
 109   1      //  if(mode_in>3)mode_in = 1;
 110   1        NPCA110P_init();
 111   1      }
 112          void  NPCA110P_SOURCE(void)
 113          {
 114   1        UINT8 i;
 115   1        if(source_in==1)  
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/29/2017 10:43:49 PAGE 3   

 116   1          for(i=0;i<8;i++)
 117   1          {
 118   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
 119   2            Timer0_Delay1ms(1);
 120   2          }
 121   1        else  if(source_in==2)  
 122   1          for(i=0;i<8;i++)
 123   1          {
 124   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
 125   2            Timer0_Delay1ms(1);
 126   2          }
 127   1        else  if(source_in==3)  
 128   1        {
 129   2          for(i=0;i<8;i++)
 130   2          {
 131   3            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
 132   3            Timer0_Delay1ms(1);
 133   3          }   
 134   2        }
 135   1      
 136   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    530    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
