C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/28/2017 15:37:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          
   3          extern  void Timer0_Delay1ms(UINT32 u32CNT);
   4          extern  void  GPIO_MUTE(void);
   5          extern const unsigned char code g_abMax1xDSPCommands[];
   6          extern const unsigned char code g_abMax2xDSPCommands[];
   7          extern const unsigned char code g_abMax3xDSPCommands[];
   8          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
   9          void  NPCA110P_SOURCE(void);
  10          #define   NPCA110P_EEPROM_SLA     0xe6
  11          
  12          UINT8 source_in = 1,mode_in = 1;
  13          
  14          //模拟输入通道切换命令：
  15          const unsigned char code channel_Commands[] = 
  16          {
  17          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  18          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  19          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  20          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  21                                          
  22          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  23          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  24          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  25          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  26                                          
  27          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  28          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  29          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  30          0xFF,0xAD,0x86,   0x00,0x00,0x00
  31          };     
  32          unsigned char volume_Control[] = 
  33          {
  34            0x01, 0xd0, 0x9a
  35          }; 
  36             
  37          void  NPCA110P_init(void)
  38          {
  39   1        int i;
  40   1      //  source_in = 1,mode_in = 1;
  41   1        GPIO_MUTE();
  42   1        switch(mode_in)
  43   1        {
  44   2          case  1:
  45   2              for(i=0;i<308;i++)
  46   2              {
  47   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
  48   3                Timer0_Delay1ms(1);
  49   3              }
  50   2              break;
  51   2          case  2:
  52   2              for(i=0;i<308;i++)
  53   2              {
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/28/2017 15:37:10 PAGE 2   

  54   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax2xDSPCommands+i*3),3);//924);
  55   3                Timer0_Delay1ms(1);
  56   3              }
  57   2              break;    
  58   2          case  3:
  59   2              for(i=0;i<308;i++)
  60   2              {
  61   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax3xDSPCommands+i*3),3);//924);
  62   3                Timer0_Delay1ms(1);
  63   3              }
  64   2              break;    
  65   2          default:
  66   2            break;
  67   2        }
  68   1        source_in--;
  69   1        NPCA110P_SOURCE();
  70   1        GPIO_MUTE();
  71   1      }
  72          void  NPCA110P_VOL_A(void)
  73          {
  74   1        if(volume_Control[2]>=0xf3)volume_Control[2]=0xed;
  75   1        volume_Control[2]=volume_Control[2]+6;
  76   1      //  volume_Control[5]++;
  77   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  78   1      }
  79          void  NPCA110P_VOL_B(void)
  80          {
  81   1        if(volume_Control[2]<6)volume_Control[2]=6;
  82   1        volume_Control[2]=volume_Control[2]-6;
  83   1      //  volume_Control[5]--;
  84   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  85   1      }
  86          void  NPCA110P_MUTE(void)
  87          {
  88   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
  89   1      }
  90          void  NPCA110P_MODE(void)
  91          {
  92   1        mode_in++;
  93   1        if(mode_in>3)mode_in = 1;
  94   1        NPCA110P_init();
  95   1      }
  96          void  NPCA110P_SOURCE(void)
  97          {
  98   1        UINT8 i;
  99   1        source_in++;
 100   1        if(source_in>3)source_in = 1;
 101   1        if(source_in==1)  
 102   1          for(i=0;i<8;i++)
 103   1          {
 104   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
 105   2            Timer0_Delay1ms(1);
 106   2          }
 107   1        else  if(source_in==2)  
 108   1          for(i=0;i<8;i++)
 109   1          {
 110   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
 111   2            Timer0_Delay1ms(1);
 112   2          }
 113   1        else  if(source_in==3)  
 114   1          for(i=0;i<8;i++)
 115   1          {
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/28/2017 15:37:10 PAGE 3   

 116   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
 117   2            Timer0_Delay1ms(1);
 118   2          }
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    530    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
