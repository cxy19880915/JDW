C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/08/2018 19:06:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          #include "config.h"
   3          
   4          void  NPCA110P_VOL(void);
   5          void  NPCA110P_SOURCE(void);
   6          extern  UINT8 VOL_LED;
   7          extern  bit led_flag;
   8          extern  bit led_flag,flag_m,flag_s;
   9          extern  void  delay(void);
  10          //extern  void  GPIO_MUTE(void);
  11          extern const unsigned char code g_abMax1xDSPCommands[];
  12          extern const unsigned char code g_abMax2xDSPCommands[];
  13          extern const unsigned char code g_abMax3xDSPCommands[];
  14          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
  15          void  NPCA110P_SOURCE(void);
  16          #define   NPCA110P_EEPROM_SLA     0xe6
  17          
  18          UINT8 source_in = 1,mode_in = 2,VOL_level = 15;
  19          extern  UINT16 sys_flag;
  20          
  21          //模拟输入通道切换命令：
  22          const unsigned char code channel_Commands[] = 
  23          {
  24          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  25          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  26          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  27          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  28                                          
  29          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  30          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  31          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  32          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  33                                          
  34          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  35          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  36          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  37          0xFF,0xAD,0x86,   0x00,0x00,0x00
  38          };     
  39          unsigned char volume_Control[] = 
  40          {
  41            0x01, 0xd0, 0x9a
  42          }; 
  43             
  44          void  NPCA110P_init(void)
  45          {
  46   1        int i;
  47   1      //  source_in = 1,mode_in = 1;
  48   1      //  GPIO_MUTE();
  49   1      //  MUTE = 1;
  50   1        if(!MUTE){MUTE = 1;flag_s = 1;flag_m = 1;}
  51   1        switch(mode_in)
  52   1        {
  53   2          case  1:
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/08/2018 19:06:47 PAGE 2   

  54   2              for(i=0;i<308;i++)
  55   2              {
  56   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
  57   3                delay();delay();
  58   3              }
  59   2              break;
  60   2          case  2:
  61   2              for(i=0;i<308;i++)
  62   2              {
  63   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax2xDSPCommands+i*3),3);//924);
  64   3                delay();delay();
  65   3              }
  66   2              break;    
  67   2          case  3:
  68   2              for(i=0;i<308;i++)
  69   2              {
  70   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax3xDSPCommands+i*3),3);//924);
  71   3                delay();delay();
  72   3              }
  73   2              break;    
  74   2          default:
  75   2            break;
  76   2        }
  77   1        
  78   1      //  sys_flag = sys_flag | sys_source;
  79   1      //  source_in--;
  80   1      //  NPCA110P_SOURCE();
  81   1        
  82   1        NPCA110P_VOL();
  83   1        if((flag_s)||(flag_m)){MUTE = 0;flag_s = 0;flag_m = 0;}
  84   1      //  MUTE = 0;
  85   1      //  source_in--;
  86   1      //  NPCA110P_SOURCE();
  87   1      //  GPIO_MUTE();
  88   1      }
  89          void  NPCA110P_VOL(void)
  90          {
  91   1        switch(VOL_level)
  92   1        {
  93   2          case  0:
  94   2      //      GPIO_MUTE();
  95   2            volume_Control[0]=0x00;
  96   2            volume_Control[2]=0x00;
  97   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  98   2            break;
  99   2          
 100   2          case  1:
 101   2      //      GPIO_MUTE();
 102   2            volume_Control[0]=0x00;
 103   2            volume_Control[2]=0x55;
 104   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 105   2            break;
 106   2          
 107   2          case  2:
 108   2            volume_Control[0]=0x00;
 109   2            volume_Control[2]=0x69;
 110   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 111   2            break;
 112   2          
 113   2          case  3:
 114   2            volume_Control[0]=0x00;
 115   2            volume_Control[2]=0x9a;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/08/2018 19:06:47 PAGE 3   

 116   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 117   2            break;
 118   2          
 119   2          case  4:
 120   2            volume_Control[0]=0x00;
 121   2            volume_Control[2]=0xcd;
 122   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 123   2            break;
 124   2          
 125   2          case  5:
 126   2            volume_Control[0]=0x00;
 127   2            volume_Control[2]=0xff;
 128   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 129   2            break;
 130   2          
 131   2          case  6:
 132   2            volume_Control[0]=0x01;
 133   2            volume_Control[2]=0x18;
 134   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 135   2            break;
 136   2          
 137   2          case  7:
 138   2            volume_Control[0]=0x01;
 139   2            volume_Control[2]=0x31;
 140   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 141   2            break;
 142   2          
 143   2          case  8:
 144   2            volume_Control[0]=0x01;
 145   2            volume_Control[2]=0x36;
 146   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 147   2            break;
 148   2          
 149   2          case  9:
 150   2            volume_Control[0]=0x01;
 151   2            volume_Control[2]=0x3b;
 152   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 153   2            break;
 154   2          
 155   2          case  10:
 156   2            volume_Control[0]=0x01;
 157   2            volume_Control[2]=0x40;
 158   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 159   2            break;
 160   2          
 161   2          case  11:
 162   2            volume_Control[0]=0x01;
 163   2            volume_Control[2]=0x45;
 164   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 165   2            break;
 166   2          
 167   2          case  12:
 168   2            volume_Control[0]=0x01;
 169   2            volume_Control[2]=0x4a;
 170   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 171   2            break;
 172   2          
 173   2          case  13:
 174   2            volume_Control[0]=0x01;
 175   2            volume_Control[2]=0x4f;
 176   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 177   2            break;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/08/2018 19:06:47 PAGE 4   

 178   2          
 179   2          case  14:
 180   2            volume_Control[0]=0x01;
 181   2            volume_Control[2]=0x54;
 182   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 183   2            break;
 184   2          
 185   2          case  15:
 186   2            volume_Control[0]=0x01;
 187   2            volume_Control[2]=0x59;
 188   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 189   2            break;
 190   2          
 191   2          case  16:
 192   2            volume_Control[0]=0x01;
 193   2            volume_Control[2]=0x5e;
 194   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 195   2            break;
 196   2          
 197   2          case  17:
 198   2            volume_Control[0]=0x01;
 199   2            volume_Control[2]=0x63;
 200   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 201   2            break;
 202   2          
 203   2          case  18:
 204   2            volume_Control[0]=0x01;
 205   2            volume_Control[2]=0x68;
 206   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 207   2            break;
 208   2          
 209   2          case  19:
 210   2            volume_Control[0]=0x01;
 211   2            volume_Control[2]=0x6d;
 212   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 213   2            break;
 214   2          
 215   2          case  20:
 216   2            volume_Control[0]=0x01;
 217   2            volume_Control[2]=0x72;
 218   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 219   2            break;
 220   2          
 221   2          case  21:
 222   2            volume_Control[0]=0x01;
 223   2            volume_Control[2]=0x77;
 224   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 225   2            break;
 226   2          
 227   2          case  22:
 228   2            volume_Control[0]=0x01;
 229   2            volume_Control[2]=0x7c;
 230   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 231   2            break;
 232   2          
 233   2          case  23:
 234   2            volume_Control[0]=0x01;
 235   2            volume_Control[2]=0x81;
 236   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 237   2            break;
 238   2          
 239   2          case  24:
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/08/2018 19:06:47 PAGE 5   

 240   2            volume_Control[0]=0x01;
 241   2            volume_Control[2]=0x86;
 242   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 243   2            break;
 244   2          
 245   2          case  25:
 246   2            volume_Control[0]=0x01;
 247   2            volume_Control[2]=0x8b;
 248   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 249   2            break;
 250   2          
 251   2          case  26:
 252   2            volume_Control[0]=0x01;
 253   2            volume_Control[2]=0x90;
 254   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 255   2            break;
 256   2          
 257   2          case  27:
 258   2            volume_Control[0]=0x01;
 259   2            volume_Control[2]=0x95;
 260   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 261   2            break;
 262   2          
 263   2          case  28:
 264   2            volume_Control[0]=0x01;
 265   2            volume_Control[2]=0x9a;
 266   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 267   2            break;
 268   2          
 269   2          case  29:
 270   2            volume_Control[0]=0x01;
 271   2            volume_Control[2]=0x9f;
 272   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 273   2            break;
 274   2          
 275   2          case  30:
 276   2            volume_Control[0]=0x01;
 277   2            volume_Control[2]=0x9f;
 278   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 279   2            break;
 280   2          
 281   2        }
 282   1      }
 283          //void  NPCA110P_VOL_B(void)
 284          //{
 285          //  VOL_LED = 1;
 286          //  if(volume_Control[2]<=0x00)
 287          //  {
 288          //    VOL_LED = 0;
 289          //    led_flag = 0;
 290          //    return;
 291          //  }
 292          //  if(volume_Control[2]<6)volume_Control[2]=6;
 293          //  volume_Control[2]=volume_Control[2]-6;
 294          ////  volume_Control[5]--;
 295          //  I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 296          //}
 297          void  NPCA110P_MUTE(void)
 298          {
 299   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
 300   1      }
 301          void  NPCA110P_MODE(void)
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/08/2018 19:06:47 PAGE 6   

 302          {
 303   1      //  mode_in++;
 304   1      //  if(mode_in>3)mode_in = 1;
 305   1      //  if(!MUTE){MUTE = 1;flag_m = 1;}
 306   1        NPCA110P_init();
 307   1      //  if(flag_m){MUTE = 0;flag_s = 0;flag_m = 0;}
 308   1      }
 309          void  NPCA110P_SOURCE(void)
 310          {
 311   1        UINT8 i;
 312   1      //  if(!MUTE){MUTE = 1;flag_s = 1;flag_m = 1;}
 313   1        if(source_in==1)  
 314   1          for(i=0;i<8;i++)
 315   1          {
 316   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
 317   2            delay();delay();
 318   2          }
 319   1        else  if(source_in==2)  
 320   1          for(i=0;i<8;i++)
 321   1          {
 322   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
 323   2            delay();delay();
 324   2          }
 325   1        else  if(source_in==3)  
 326   1        {
 327   2          for(i=0;i<8;i++)
 328   2          {
 329   3            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
 330   3            delay();delay();
 331   3          }   
 332   2        }
 333   1      //  if(flag_s){MUTE = 0;flag_s = 0;flag_m = 0;}
 334   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    967    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
