C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/05/2018 15:31:59 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          #include "config.h"
   3          
   4          void  NPCA110P_VOL(void);
   5          void  NPCA110P_SOURCE(void);
   6          extern  UINT8 VOL_LED;
   7          extern  bit led_flag;
   8          extern  void  delay(void);
   9          //extern  void  GPIO_MUTE(void);
  10          extern const unsigned char code g_abMax1xDSPCommands[];
  11          extern const unsigned char code g_abMax2xDSPCommands[];
  12          extern const unsigned char code g_abMax3xDSPCommands[];
  13          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
  14          void  NPCA110P_SOURCE(void);
  15          #define   NPCA110P_EEPROM_SLA     0xe6
  16          
  17          UINT8 source_in = 1,mode_in = 1,VOL_level = 15;
  18          
  19          //模拟输入通道切换命令：
  20          const unsigned char code channel_Commands[] = 
  21          {
  22          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  23          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  24          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  25          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  26                                          
  27          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  28          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  29          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  30          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  31                                          
  32          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  33          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  34          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  35          0xFF,0xAD,0x86,   0x00,0x00,0x00
  36          };     
  37          unsigned char volume_Control[] = 
  38          {
  39            0x01, 0xd0, 0x9a
  40          }; 
  41             
  42          void  NPCA110P_init(void)
  43          {
  44   1        int i;
  45   1      //  source_in = 1,mode_in = 1;
  46   1      //  GPIO_MUTE();
  47   1        MUTE = 1;
  48   1        switch(mode_in)
  49   1        {
  50   2          case  1:
  51   2              for(i=0;i<308;i++)
  52   2              {
  53   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/05/2018 15:31:59 PAGE 2   

  54   3                delay();delay();
  55   3              }
  56   2              break;
  57   2          case  2:
  58   2              for(i=0;i<308;i++)
  59   2              {
  60   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax2xDSPCommands+i*3),3);//924);
  61   3                delay();delay();
  62   3              }
  63   2              break;    
  64   2          case  3:
  65   2              for(i=0;i<308;i++)
  66   2              {
  67   3                I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax3xDSPCommands+i*3),3);//924);
  68   3                delay();delay();
  69   3              }
  70   2              break;    
  71   2          default:
  72   2            break;
  73   2        }
  74   1        NPCA110P_SOURCE();
  75   1        VOL_level = 22;
  76   1        NPCA110P_VOL();
  77   1        MUTE = 0;
  78   1      //  source_in--;
  79   1      //  NPCA110P_SOURCE();
  80   1      //  GPIO_MUTE();
  81   1      }
  82          void  NPCA110P_VOL(void)
  83          {
  84   1        switch(VOL_level)
  85   1        {
  86   2          case  0:
  87   2      //      GPIO_MUTE();
  88   2            volume_Control[0]=0x00;
  89   2            volume_Control[2]=0x00;
  90   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  91   2            break;
  92   2          
  93   2          case  1:
  94   2      //      GPIO_MUTE();
  95   2            volume_Control[0]=0x00;
  96   2            volume_Control[2]=0x50;
  97   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  98   2            break;
  99   2          
 100   2          case  2:
 101   2            volume_Control[0]=0x00;
 102   2            volume_Control[2]=0x64;
 103   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 104   2            break;
 105   2          
 106   2          case  3:
 107   2            volume_Control[0]=0x00;
 108   2            volume_Control[2]=0x96;
 109   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 110   2            break;
 111   2          
 112   2          case  4:
 113   2            volume_Control[0]=0x00;
 114   2            volume_Control[2]=0xc8;
 115   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/05/2018 15:31:59 PAGE 3   

 116   2            break;
 117   2          
 118   2          case  5:
 119   2            volume_Control[0]=0x00;
 120   2            volume_Control[2]=0xfa;
 121   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 122   2            break;
 123   2          
 124   2          case  6:
 125   2            volume_Control[0]=0x01;
 126   2            volume_Control[2]=0x13;
 127   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 128   2            break;
 129   2          
 130   2          case  7:
 131   2            volume_Control[0]=0x01;
 132   2            volume_Control[2]=0x2c;
 133   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 134   2            break;
 135   2          
 136   2          case  8:
 137   2            volume_Control[0]=0x01;
 138   2            volume_Control[2]=0x31;
 139   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 140   2            break;
 141   2          
 142   2          case  9:
 143   2            volume_Control[0]=0x01;
 144   2            volume_Control[2]=0x36;
 145   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 146   2            break;
 147   2          
 148   2          case  10:
 149   2            volume_Control[0]=0x01;
 150   2            volume_Control[2]=0x3b;
 151   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 152   2            break;
 153   2          
 154   2          case  11:
 155   2            volume_Control[0]=0x01;
 156   2            volume_Control[2]=0x40;
 157   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 158   2            break;
 159   2          
 160   2          case  12:
 161   2            volume_Control[0]=0x01;
 162   2            volume_Control[2]=0x45;
 163   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 164   2            break;
 165   2          
 166   2          case  13:
 167   2            volume_Control[0]=0x01;
 168   2            volume_Control[2]=0x4a;
 169   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 170   2            break;
 171   2          
 172   2          case  14:
 173   2            volume_Control[0]=0x01;
 174   2            volume_Control[2]=0x4f;
 175   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 176   2            break;
 177   2          
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/05/2018 15:31:59 PAGE 4   

 178   2          case  15:
 179   2            volume_Control[0]=0x01;
 180   2            volume_Control[2]=0x54;
 181   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 182   2            break;
 183   2          
 184   2          case  16:
 185   2            volume_Control[0]=0x01;
 186   2            volume_Control[2]=0x59;
 187   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 188   2            break;
 189   2          
 190   2          case  17:
 191   2            volume_Control[0]=0x01;
 192   2            volume_Control[2]=0x5e;
 193   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 194   2            break;
 195   2          
 196   2          case  18:
 197   2            volume_Control[0]=0x01;
 198   2            volume_Control[2]=0x63;
 199   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 200   2            break;
 201   2          
 202   2          case  19:
 203   2            volume_Control[0]=0x01;
 204   2            volume_Control[2]=0x68;
 205   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 206   2            break;
 207   2          
 208   2          case  20:
 209   2            volume_Control[0]=0x01;
 210   2            volume_Control[2]=0x6d;
 211   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 212   2            break;
 213   2          
 214   2          case  21:
 215   2            volume_Control[0]=0x01;
 216   2            volume_Control[2]=0x72;
 217   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 218   2            break;
 219   2          
 220   2          case  22:
 221   2            volume_Control[0]=0x01;
 222   2            volume_Control[2]=0x77;
 223   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 224   2            break;
 225   2          
 226   2          case  23:
 227   2            volume_Control[0]=0x01;
 228   2            volume_Control[2]=0x7c;
 229   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 230   2            break;
 231   2          
 232   2          case  24:
 233   2            volume_Control[0]=0x01;
 234   2            volume_Control[2]=0x81;
 235   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 236   2            break;
 237   2          
 238   2          case  25:
 239   2            volume_Control[0]=0x01;
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/05/2018 15:31:59 PAGE 5   

 240   2            volume_Control[2]=0x86;
 241   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 242   2            break;
 243   2          
 244   2          case  26:
 245   2            volume_Control[0]=0x01;
 246   2            volume_Control[2]=0x8b;
 247   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 248   2            break;
 249   2          
 250   2          case  27:
 251   2            volume_Control[0]=0x01;
 252   2            volume_Control[2]=0x90;
 253   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 254   2            break;
 255   2          
 256   2          case  28:
 257   2            volume_Control[0]=0x01;
 258   2            volume_Control[2]=0x95;
 259   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 260   2            break;
 261   2          
 262   2          case  29:
 263   2            volume_Control[0]=0x01;
 264   2            volume_Control[2]=0x98;
 265   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 266   2            break;
 267   2          
 268   2          case  30:
 269   2            volume_Control[0]=0x01;
 270   2            volume_Control[2]=0x9a;
 271   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 272   2            break;
 273   2          
 274   2        }
 275   1      }
 276          //void  NPCA110P_VOL_B(void)
 277          //{
 278          //  VOL_LED = 1;
 279          //  if(volume_Control[2]<=0x00)
 280          //  {
 281          //    VOL_LED = 0;
 282          //    led_flag = 0;
 283          //    return;
 284          //  }
 285          //  if(volume_Control[2]<6)volume_Control[2]=6;
 286          //  volume_Control[2]=volume_Control[2]-6;
 287          ////  volume_Control[5]--;
 288          //  I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 289          //}
 290          void  NPCA110P_MUTE(void)
 291          {
 292   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
 293   1      }
 294          void  NPCA110P_MODE(void)
 295          {
 296   1      //  mode_in++;
 297   1      //  if(mode_in>3)mode_in = 1;
 298   1        NPCA110P_init();
 299   1      }
 300          void  NPCA110P_SOURCE(void)
 301          {
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    01/05/2018 15:31:59 PAGE 6   

 302   1        UINT8 i;
 303   1        if(source_in==1)  
 304   1          for(i=0;i<8;i++)
 305   1          {
 306   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
 307   2            delay();delay();
 308   2          }
 309   1        else  if(source_in==2)  
 310   1          for(i=0;i<8;i++)
 311   1          {
 312   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
 313   2            delay();delay();
 314   2          }
 315   1        else  if(source_in==3)  
 316   1        {
 317   2          for(i=0;i<8;i++)
 318   2          {
 319   3            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
 320   3            delay();delay();
 321   3          }   
 322   2        }
 323   1      
 324   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    972    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
