C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/28/2017 10:24:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CHANNEL_SWITCH
OBJECT MODULE PLACED IN .\Output\channel_switch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\channel_switch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include
                    -;.\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\channel_switch.lst) TABS(2) OBJECT(.\Output\channel_switc
                    -h.obj)

line level    source

   1          #include "Common.h"
   2          
   3          extern  void Timer0_Delay1ms(UINT32 u32CNT);
   4          extern const unsigned char code g_abMax1xDSPCommands[];
   5          extern  void I2C_Write_Command(UINT8 u8Address, UINT8* p8Data, UINT32 u32ByteSize);
   6          #define   NPCA110P_EEPROM_SLA     0xe6
   7          
   8          UINT8 source_in = 0,mode_in = 0;
   9          
  10          //模拟输入通道切换命令：
  11          const unsigned char code channel_Commands[] = 
  12          {
  13          0xFF,0xAD,0x83,   0x00,0x00,0x88,      //通道1  
  14          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  15          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  16          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  17                                          
  18          0xFF,0xAD,0x83,   0x00,0x00,0x99,      //通道2  
  19          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  20          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  21          0xFF,0xAD,0x86,   0x00,0x00,0x00,
  22                                          
  23          0xFF,0xAD,0x83,   0x00,0x00,0xAA,      //通道3  
  24          0xFF,0xAD,0x86,   0x00,0x00,0x00, 
  25          0xFF,0xAD,0x86,   0x00,0x00,0x01, 
  26          0xFF,0xAD,0x86,   0x00,0x00,0x00
  27          };     
  28          unsigned char volume_Control[] = 
  29          {
  30          0xFF,0xd0,0x9a
  31          }; 
  32             
  33          void  NPCA110P_init(void)
  34          {
  35   1        int i;
  36   1        source_in = 1,mode_in = 0;
  37   1        for(i=0;i<308;i++)
  38   1        {
  39   2          I2C_Write_Command(NPCA110P_EEPROM_SLA,(g_abMax1xDSPCommands+i*3),3);//924);
  40   2          Timer0_Delay1ms(1);
  41   2        }
  42   1      }
  43          void  NPCA110P_VOL_A(void)
  44          {
  45   1        volume_Control[2]++;
  46   1      //  volume_Control[5]++;
  47   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
  48   1      }
  49          void  NPCA110P_VOL_B(void)
  50          {
  51   1        volume_Control[2]--;
  52   1      //  volume_Control[5]--;
  53   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
C51 COMPILER V9.56.0.0   CHANNEL_SWITCH                                                    12/28/2017 10:24:04 PAGE 2   

  54   1      }
  55          void  NPCA110P_MUTE(void)
  56          {
  57   1      //  I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
  58   1      }
  59          void  NPCA110P_MODE(void)
  60          {
  61   1        mode_in++;
  62   1        if(mode_in==1)
  63   1        I2C_Write_Command(NPCA110P_EEPROM_SLA,g_abMax1xDSPCommands,10);
  64   1      }
  65          void  NPCA110P_SOURCE(void)
  66          {
  67   1        UINT8 i;
  68   1        source_in++;
  69   1        if(source_in>3)source_in = 1;
  70   1        if(source_in==1)  
  71   1          for(i=0;i<8;i++)
  72   1          {
  73   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+i*3,3);
  74   2            Timer0_Delay1ms(1);
  75   2          }
  76   1        else  if(source_in==2)  
  77   1          for(i=0;i<8;i++)
  78   1          {
  79   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+24+i*3,3);
  80   2            Timer0_Delay1ms(1);
  81   2          }
  82   1        else  if(source_in==3)  
  83   1          for(i=0;i<8;i++)
  84   1          {
  85   2            I2C_Write_Command(NPCA110P_EEPROM_SLA,channel_Commands+48+i*3,3);
  86   2            Timer0_Delay1ms(1);
  87   2          }
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
