C51 COMPILER V9.56.0.0   ADC                                                               12/28/2017 12:05:26 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Output\Adc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Common\Adc.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\Include) DEFIN
                    -E(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Adc.lst) TABS(2) OBJECT(.\Output\Adc.obj)

line level    source

   1          #include "adc.h"
   2          
   3          /*************  本地变量声明  **************/
   4          UINT8 adc_count = 0;
   5          bit   key_flag = 0;
   6          UINT8 adc_RH = 0;
   7          //UINT8 adc_V = 0;
   8          //bit   adc_V_flag = 0;
   9          
  10          #define   POWER   0x00
  11          #define   MODE    0x10
  12          #define   VOL_A   0x20
  13          #define   VOL_B   0x30
  14          #define   SOURCE  0x40
  15          
  16          extern  bit power_flag,led_flag;
  17          extern  void  NPCA110P_MODE(void);
  18          extern  void  NPCA110P_SOURCE(void);
  19          extern  void  NPCA110P_VOL_A(void);
  20          extern  void  NPCA110P_VOL_B(void);
  21          
  22          UINT8 adc_start(void)
  23          {
  24   1        UINT8 adc_dat = 0;
  25   1        clr_ADCF;
  26   1        set_ADCS;
  27   1        while(ADCF == 0);
  28   1        adc_dat = ADCRH;
  29   1        adc_count++;
  30   1        return  adc_dat;
  31   1      }
  32          
  33          void  KEY_EVENT(void)
  34          {
  35   1        if(key_flag)
  36   1        {
  37   2          if(adc_RH == POWER)
  38   2          {
  39   3            power_flag = ~power_flag;
  40   3          }
  41   2          if(adc_RH == MODE)
  42   2          {
  43   3            NPCA110P_MODE();
  44   3            led_flag = 1;
  45   3          }
  46   2          if(adc_RH == VOL_A)
  47   2          {
  48   3            NPCA110P_VOL_A();
  49   3          }
  50   2          if(adc_RH == VOL_B)
  51   2          {
  52   3            NPCA110P_VOL_B();
  53   3          }
  54   2          if(adc_RH == SOURCE)
C51 COMPILER V9.56.0.0   ADC                                                               12/28/2017 12:05:26 PAGE 2   

  55   2          {
  56   3            NPCA110P_SOURCE();
  57   3            led_flag = 1;
  58   3          }
  59   2          key_flag = 0;
  60   2        }
  61   1      }
  62          
  63          void  adc_init(void)
  64          {
  65   1      //  InitialUART0_Timer1(115200);
  66   1        P04_Quasi_Mode;
  67   1        Enable_ADC_AIN5;
  68   1      //  P04_FALLINGEDGE_TRIG_ADC;                     // P0.4 falling edge as adc start trig signal
  69   1      //  set_EADC;                                     // Enable ADC interrupt (if use interrupt)
  70   1      }
  71          
  72          /******************************************************************************
  73           * FUNCTION_PURPOSE: ADC interrupt Service Routine
  74           ******************************************************************************/
  75          void ADC_ISR (void) interrupt 11
  76          {
  77   1          clr_ADCF;                               //clear ADC interrupt flag
  78   1          adc_RH = ADCRH;
  79   1          key_flag = 1;
  80   1      //    if(ADCRH)
  81   1      //    printf ("\n Value = 0x%bx",ADCRH);
  82   1      }
  83          
  84          #if 0
              void  adc_init(void)
              {
                ADCCON0&=0xc0;    //AD转换启动AD标志完成
                AINDIDS=0x00;   
                AIN(AINx);      //通道选择并配置
                ADCCON1|=SET_BIT0;  //ADC使能
              }
              
              void  AIN (UINT8  adc_AINx)
              {
                switch(adc_AINx)
                {
                  case  AIN0:
                    ADCCON0 |= 0x00;
                    P17_Input_Mode;
                    AINDIDS|=SET_BIT0;
                    break;
                  
                  case  AIN1:
                    ADCCON0 |= 0x01;
                    P30_Input_Mode;
                    AINDIDS|=SET_BIT1;
                    break;
                  
                  case  AIN2:
                    ADCCON0 |= 0x02;
                    P07_Input_Mode;
                    AINDIDS|=SET_BIT2;
                    break;
                    
                  case  AIN3:
                    ADCCON0 |= 0x03;
C51 COMPILER V9.56.0.0   ADC                                                               12/28/2017 12:05:26 PAGE 3   

                    P06_Input_Mode;
                    AINDIDS|=SET_BIT3;
                    break;
                    
                  case  AIN4:
                    ADCCON0 |= 0x04;
                    P05_Input_Mode;
                    AINDIDS|=SET_BIT4;
                    break;
                    
                  case  AIN5:
                    ADCCON0 |= 0x05;
                    P04_Input_Mode;
                    AINDIDS|=SET_BIT5;
                    break;
                    ;
                  case  AIN6:
                    ADCCON0 |= 0x06;
                    P03_Input_Mode;
                    AINDIDS|=SET_BIT6;
                    break;
                    
                  case  AIN7:
                    ADCCON0 |= 0x07;
                    P11_Input_Mode;
                    AINDIDS|=SET_BIT7;
                    break;
                    
                  default:
                    break;
                }
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     98    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
