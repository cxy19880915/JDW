C51 COMPILER V9.56.0.0   DEMO                                                              01/04/2018 23:03:18 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DEMO
OBJECT MODULE PLACED IN .\Output\DEMO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\DEMO.C OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\Include
                    -) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\DEMO.lst) TABS(2) OBJECT(.\Output\DEMO.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 GPIO demo code
  15          //********************************************************************************************************
             -***
  16          //#include "N76E003.h"
  17          //#include "SFR_Macro.h"
  18          //#include "Function_define.h"
  19          //#include "Common.h"
  20          //#include "Delay.h"
  21          #include "sysinit.h"
  22          #include "task_deal.h"
  23          
  24          extern const unsigned char code g_abMax1xDSPCommands[];
  25          extern const unsigned char code g_abMax2xDSPCommands[];
  26          extern const unsigned char code g_abMax3xDSPCommands[];
  27          extern  void Bluetooth_Test_Task(void);
  28          extern  void  KEY_EVENT(void);
  29          extern  void  SYS_SOURCE(void);
  30          extern  void  SYS_VOL_A(void);
  31          extern  void  SYS_VOL_B(void);
  32          extern  void  SYS_MODE(void);
  33          
  34          extern unsigned char BT_connect;
  35          extern UINT8 Dat_count,nm;
  36          
  37          //*****************  The Following is in define in Fucntion_define.h  ***************************
  38          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  39          //***********************************************************************************************
  40          #if 0
              ////------------------- Define Port as Quasi mode  -------------------
              //#define P00_Quasi_Mode        P0M1&=~SET_BIT0;P0M2&=~SET_BIT0
              //#define P01_Quasi_Mode        P0M1&=~SET_BIT1;P0M2&=~SET_BIT1
              //#define P02_Quasi_Mode        P0M1&=~SET_BIT2;P0M2&=~SET_BIT2
              //#define P03_Quasi_Mode        P0M1&=~SET_BIT3;P0M2&=~SET_BIT3
C51 COMPILER V9.56.0.0   DEMO                                                              01/04/2018 23:03:18 PAGE 2   

              //#define P04_Quasi_Mode        P0M1&=~SET_BIT4;P0M2&=~SET_BIT4
              //#define P05_Quasi_Mode        P0M1&=~SET_BIT5;P0M2&=~SET_BIT5
              //#define P06_Quasi_Mode        P0M1&=~SET_BIT6;P0M2&=~SET_BIT6
              //#define P07_Quasi_Mode        P0M1&=~SET_BIT7;P0M2&=~SET_BIT7
              //#define P10_Quasi_Mode        P1M1&=~SET_BIT0;P1M2&=~SET_BIT0
              //#define P11_Quasi_Mode        P1M1&=~SET_BIT1;P1M2&=~SET_BIT1
              //#define P12_Quasi_Mode        P1M1&=~SET_BIT2;P1M2&=~SET_BIT2
              //#define P13_Quasi_Mode        P1M1&=~SET_BIT3;P1M2&=~SET_BIT3
              //#define P14_Quasi_Mode        P1M1&=~SET_BIT4;P1M2&=~SET_BIT4
              //#define P15_Quasi_Mode        P1M1&=~SET_BIT5;P1M2&=~SET_BIT5
              //#define P16_Quasi_Mode        P1M1&=~SET_BIT6;P1M2&=~SET_BIT6
              //#define P17_Quasi_Mode        P1M1&=~SET_BIT7;P1M2&=~SET_BIT7
              //#define P20_Quasi_Mode        P2M1&=~SET_BIT0;P2M2&=~SET_BIT0
              //#define P30_Quasi_Mode        P3M1&=~SET_BIT0;P3M2&=~SET_BIT0
              ////------------------- Define Port as Push Pull mode -------------------
              //#define P00_PushPull_Mode     P0M1|=SET_BIT0;P0M2&=~SET_BIT0
              //#define P01_PushPull_Mode     P0M1|=SET_BIT1;P0M2&=~SET_BIT1
              //#define P02_PushPull_Mode     P0M1&=~SET_BIT2;P0M2|=SET_BIT2
              //#define P03_PushPull_Mode     P0M1&=~SET_BIT3;P0M2|=SET_BIT3
              //#define P04_PushPull_Mode     P0M1&=~SET_BIT4;P0M2|=SET_BIT4
              //#define P05_PushPull_Mode     P0M1&=~SET_BIT5;P0M2|=SET_BIT5
              //#define P06_PushPull_Mode     P0M1&=~SET_BIT6;P0M2|=SET_BIT6
              //#define P07_PushPull_Mode     P0M1&=~SET_BIT7;P0M2|=SET_BIT7
              //#define P10_PushPull_Mode     P1M1&=~SET_BIT0;P1M2|=SET_BIT0
              //#define P11_PushPull_Mode     P1M1&=~SET_BIT1;P1M2|=SET_BIT1
              //#define P12_PushPull_Mode     P1M1&=~SET_BIT2;P1M2|=SET_BIT2
              //#define P13_PushPull_Mode     P1M1&=~SET_BIT3;P1M2|=SET_BIT3
              //#define P14_PushPull_Mode     P1M1&=~SET_BIT4;P1M2|=SET_BIT4
              //#define P15_PushPull_Mode     P1M1&=~SET_BIT5;P1M2|=SET_BIT5
              //#define P16_PushPull_Mode     P1M1&=~SET_BIT6;P1M2|=SET_BIT6
              //#define P17_PushPull_Mode     P1M1&=~SET_BIT7;P1M2|=SET_BIT7
              //#define P20_PushPull_Mode     P2M1&=~SET_BIT0;P2M2|=SET_BIT0
              //#define P30_PushPull_Mode     P3M1&=~SET_BIT0;P3M2|=SET_BIT0
              ////------------------- Define Port as Input Only mode -------------------
              //#define P00_Input_Mode        P0M1|=SET_BIT0;P0M2&=~SET_BIT0
              //#define P01_Input_Mode        P0M1|=SET_BIT1;P0M2&=~SET_BIT1
              //#define P02_Input_Mode        P0M1|=SET_BIT2;P0M2&=~SET_BIT2
              //#define P03_Input_Mode        P0M1|=SET_BIT3;P0M2&=~SET_BIT3
              //#define P04_Input_Mode        P0M1|=SET_BIT4;P0M2&=~SET_BIT4
              //#define P05_Input_Mode        P0M1|=SET_BIT5;P0M2&=~SET_BIT5
              //#define P06_Input_Mode        P0M1|=SET_BIT6;P0M2&=~SET_BIT6
              //#define P07_Input_Mode        P0M1|=SET_BIT7;P0M2&=~SET_BIT7
              //#define P10_Input_Mode        P1M1|=SET_BIT0;P1M2&=~SET_BIT0
              //#define P11_Input_Mode        P1M1|=SET_BIT1;P1M2&=~SET_BIT1
              //#define P12_Input_Mode        P1M1|=SET_BIT2;P1M2&=~SET_BIT2
              //#define P13_Input_Mode        P1M1|=SET_BIT3;P1M2&=~SET_BIT3
              //#define P14_Input_Mode        P1M1|=SET_BIT4;P1M2&=~SET_BIT4
              //#define P15_Input_Mode        P1M1|=SET_BIT5;P1M2&=~SET_BIT5
              //#define P16_Input_Mode        P1M1|=SET_BIT6;P1M2&=~SET_BIT6
              //#define P17_Input_Mode        P1M1|=SET_BIT7;P1M2&=~SET_BIT7
              //#define P20_Input_Mode        P2M1|=SET_BIT0;P2M2&=~SET_BIT0
              //#define P30_Input_Mode        P3M1|=SET_BIT0;P3M2&=~SET_BIT0
              ////-------------------Define Port as Open Drain mode -------------------
              //#define P00_OpenDrain_Mode    P0M1|=SET_BIT0;P0M2|=SET_BIT0
              //#define P01_OpenDrain_Mode    P0M1|=SET_BIT1;P0M2|=SET_BIT1
              //#define P02_OpenDrain_Mode    P0M1|=SET_BIT2;P0M2|=SET_BIT2
              //#define P03_OpenDrain_Mode    P0M1|=SET_BIT3;P0M2|=SET_BIT3
              //#define P04_OpenDrain_Mode    P0M1|=SET_BIT4;P0M2|=SET_BIT4
              //#define P05_OpenDrain_Mode    P0M1|=SET_BIT5;P0M2|=SET_BIT5
              //#define P06_OpenDrain_Mode    P0M1|=SET_BIT6;P0M2|=SET_BIT6
              //#define P07_OpenDrain_Mode    P0M1|=SET_BIT7;P0M2|=SET_BIT7
              //#define P10_OpenDrain_Mode    P1M1|=SET_BIT0;P1M2|=SET_BIT0
C51 COMPILER V9.56.0.0   DEMO                                                              01/04/2018 23:03:18 PAGE 3   

              //#define P11_OpenDrain_Mode    P1M1|=SET_BIT1;P1M2|=SET_BIT1
              //#define P12_OpenDrain_Mode    P1M1|=SET_BIT2;P1M2|=SET_BIT2
              //#define P13_OpenDrain_Mode    P1M1|=SET_BIT3;P1M2|=SET_BIT3
              //#define P14_OpenDrain_Mode    P1M1|=SET_BIT4;P1M2|=SET_BIT4
              //#define P15_OpenDrain_Mode    P1M1|=SET_BIT5;P1M2|=SET_BIT5
              //#define P16_OpenDrain_Mode    P1M1|=SET_BIT6;P1M2|=SET_BIT6
              //#define P17_OpenDrain_Mode    P1M1|=SET_BIT7;P1M2|=SET_BIT7
              //#define P20_OpenDrain_Mode    P2M1|=SET_BIT0;P2M2|=SET_BIT0
              //#define P30_OpenDrain_Mode    P3M1|=SET_BIT0;P3M2|=SET_BIT0
              ////--------- Define all port as quasi mode ---------
              //#define Set_All_GPIO_Quasi_Mode     P0M1=0;P0M1=0;P1M1=0;P1M2=0;P2M1=0;P2M2=0;P3M1=0;P3M2=0
              #endif
 120          
 121          /*------------------------------------------------
 122          The main C function.  Program execution starts
 123          here after stack initialization.
 124          ------------------------------------------------*/
 125          extern  UINT8 ir_status;
 126          void main (void) 
 127          #if 1
 128          {
 129   1        UINT8 step = 0,n=0;
 130   1        sys_init();
 131   1        while(1)
 132   1        {
 133   2          switch(step)
 134   2          {
 135   3            case 0:
 136   3            {
 137   4              POWER_ON_OFF();
 138   4              step = 1;
 139   4              break;
 140   4            }
 141   3            case 1:
 142   3            {
 143   4              SYS_MODE();
 144   4              step = 2;
 145   4              break;
 146   4            }
 147   3            case 2:
 148   3            {
 149   4              SYS_SOURCE();
 150   4              step = 3;
 151   4              break;
 152   4            }
 153   3            case 3:
 154   3            {
 155   4              SYS_VOL_A();
 156   4              step = 4;
 157   4              break;
 158   4            }
 159   3            case 4:
 160   3            {
 161   4              SYS_VOL_B();
 162   4              step = 5;
 163   4              break;
 164   4            }
 165   3            case 5:
 166   3            {
 167   4      //        if(ir_status)
 168   4      //        {
 169   4                IR_Deal();
C51 COMPILER V9.56.0.0   DEMO                                                              01/04/2018 23:03:18 PAGE 4   

 170   4      //          nm = 0;
 171   4      //        }
 172   4              step = 6;
 173   4              break;
 174   4            }
 175   3            case 6:
 176   3            {
 177   4              KEY_EVENT();
 178   4              step = 7;
 179   4              break;
 180   4            }
 181   3            case 7:
 182   3            {
 183   4              LED_DISPLAY();
 184   4              step = 0;
 185   4              break;
 186   4            }
 187   3      //      case 8:
 188   3      //      {
 189   3      //        Bluetooth_Test_Task();  
 190   3      //        step = 0;     
 191   3      //        break;
 192   3      //      }
 193   3            default:
 194   3              step = 0;
 195   3          }
 196   2          
 197   2        }
 198   1      }
 199          #endif
 200          #if 0
              {
              //  unsigned char temp;
                Set_All_GPIO_Quasi_Mode;          // Define in Function_define.h
                
              #if 0
                InitialUART0_Timer3(115200);
              //  set_CLOEN;                      // For clock out from P1.1
                
                while(1)
                {
                  clr_GPIO1;                      // Tiny board GPIO1 LED define
                  P0 = 0x00;
                  P2 = 0x00;
                  P1 = 0x00;
                  Timer0_Delay1ms(30);
                  P0 = 0xff;
                  P2 = 0xff;
                  P1 = 0xff;
                  set_GPIO1;  
              
                  Send_Data_To_UART0(0x35);         //UART0 send ascii "U"
                  temp = 0x31 + P0;
                  Send_Data_To_UART0(temp);
                  temp = 0x31 + P1;
                  Send_Data_To_UART0(temp);
              
                  Timer0_Delay1ms(30);
                }
              #endif
              
              #if 1
C51 COMPILER V9.56.0.0   DEMO                                                              01/04/2018 23:03:18 PAGE 5   

                
                while(1)
                {
                  clr_GPIO1;                      // Tiny board GPIO1 LED define
                  P0 = 0x00;
                  P2 = 0x00;
                  P1 = 0x00;
                  Timer0_Delay1ms(30);
                  P0 = 0xff;
                  P2 = 0xff;
                  P1 = 0xff;
                  set_GPIO1;  
                  Timer0_Delay1ms(30);
                }
              #endif
                
              
              }
              #endif
 251          
 252          
 253          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
