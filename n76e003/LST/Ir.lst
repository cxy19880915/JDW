C51 COMPILER V9.56.0.0   IR                                                                12/13/2017 15:21:58 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Output\Ir.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\Ir.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\Include) 
                    -DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Ir.lst) TABS(2) OBJECT(.\Output\Ir.obj)

line level    source

   1          #define IR_GLOBALS
   2          /******************************************************************************
   3          * @file     ir.c
   4          * @brief    The Driver code for VS1838A with MINI54FDE
   5          * @version  1.0.0
   6          * @date     22, August, 2014
   7          *
   8          * @note
   9          * Copyright (C) 2000-2014 PM9GZY by yuanxihua@21cn.com. All rights reserved.
  10          ******************************************************************************/
  11          #include "ir.h"
*** WARNING C318 IN LINE 11 OF N76E003\Code\Ir.c: can't open file 'ir.h'
  12          
  13          
  14          void IR_init(void)
  15          { 
  16   1        /*  Configure P1.0 as Quasi-bidirection mode and enable interrupt by falling edge trigger */
  17   1      //    GPIO_SetMode(P3, BIT0, GPIO_PMD_QUASI);
  18   1          GPIO_EnableInt(P3, 0, GPIO_INT_FALLING);
*** ERROR C202 IN LINE 18 OF N76E003\Code\Ir.c: 'P3': undefined identifier
  19   1          NVIC_EnableIRQ(GPIO234_IRQn);
*** ERROR C202 IN LINE 19 OF N76E003\Code\Ir.c: 'GPIO234_IRQn': undefined identifier
  20   1        
  21   1          // Enable IP clock
  22   1          CLK_EnableModuleClock(TMR1_MODULE);        
*** ERROR C202 IN LINE 22 OF N76E003\Code\Ir.c: 'TMR1_MODULE': undefined identifier
  23   1          // Select Timer 1 clock source from internal 22.1184MHz RC clock.
  24   1          CLK_SetModuleClock(TMR1_MODULE,CLK_CLKSEL1_TMR1_S_IRC22M,1);
*** ERROR C202 IN LINE 24 OF N76E003\Code\Ir.c: 'TMR1_MODULE': undefined identifier
  25   1          // configure timer to operate in specified mode.
  26   1          TIMER_Open(TIMER1, TIMER_PERIODIC_MODE, 7812);        //7.8125K = 0.128MS = 128US
*** ERROR C202 IN LINE 26 OF N76E003\Code\Ir.c: 'TIMER1': undefined identifier
  27   1          // start Timer counting
  28   1          TIMER_Start(TIMER1);
*** ERROR C202 IN LINE 28 OF N76E003\Code\Ir.c: 'TIMER1': undefined identifier
  29   1          // enable the Timer time-out interrupt function.
  30   1          TIMER_EnableInt(TIMER1);
*** ERROR C202 IN LINE 30 OF N76E003\Code\Ir.c: 'TIMER1': undefined identifier
  31   1          // Enable timer interrupt
  32   1          NVIC_EnableIRQ(TMR1_IRQn);
*** ERROR C202 IN LINE 32 OF N76E003\Code\Ir.c: 'TMR1_IRQn': undefined identifier
  33   1      }
  34          
  35          void IR_test_task(void)
  36          {
  37   1        uint8_t p[2];
*** ERROR C202 IN LINE 37 OF N76E003\Code\Ir.c: 'uint8_t': undefined identifier
*** ERROR C141 IN LINE 37 OF N76E003\Code\Ir.c: syntax error near 'p'
  38   1        p[0] = 31;
*** ERROR C202 IN LINE 38 OF N76E003\Code\Ir.c: 'p': undefined identifier
  39   1        if(KEY_data!=0x15)
*** ERROR C202 IN LINE 39 OF N76E003\Code\Ir.c: 'KEY_data': undefined identifier
  40   1          LED_Flag = 0;
*** ERROR C202 IN LINE 40 OF N76E003\Code\Ir.c: 'LED_Flag': undefined identifier
C51 COMPILER V9.56.0.0   IR                                                                12/13/2017 15:21:58 PAGE 2   

  41   1              if(disp_flag == 1)
*** ERROR C202 IN LINE 41 OF N76E003\Code\Ir.c: 'disp_flag': undefined identifier
  42   1              {
  43   2                switch(KEY_data)
*** ERROR C202 IN LINE 43 OF N76E003\Code\Ir.c: 'KEY_data': undefined identifier
  44   2                {
  45   3                  case 0x01:              //BASS+
  46   3                    if( ST_BY )
*** ERROR C202 IN LINE 46 OF N76E003\Code\Ir.c: 'ST_BY': undefined identifier
  47   3                    {
  48   4                      BD_BASS_A();              
  49   4                    }
  50   3                  break;
  51   3                    
  52   3                  case 0x02:              //BASS-
  53   3                    if( ST_BY )
  54   3                    {
  55   4                      BD_BASS_B();  
  56   4                    }
  57   3                  break;
  58   3                  
  59   3                  case 0x03:              //TREBLE+
  60   3                    if( ST_BY )
  61   3                    {
  62   4                      BD_TREBLE_A();            
  63   4                    } 
  64   3                  break;
  65   3                  
  66   3                  case 0x04:              //TREBLE-
  67   3                    if( ST_BY )
  68   3                    {
  69   4                      BD_TREBLE_B();  
  70   4                    }
  71   3                  break;
  72   3                  
  73   3                  case 0x0a:              //ÔÝÊ±BLUETOOTHÌæ´úLINE IN
  74   3                    if(disp==0)
  75   3                    {
  76   4                      p[1] = Channel[0] = 0;
  77   4                      Channel_select(Channel);
  78   4                      I2C_SW_Send(_24c02_addr,p,2);
  79   4                    }
  80   3                    else if(disp>2)   
  81   3                    {
  82   4                      BT_patch();         //patch bluetooth
  83   4      //                CLK_SysTickDelay(40000);LED_B = 1;
  84   4      //                CLK_SysTickDelay(40000);LED_B = 0;
  85   4                    }
  86   3                  break;
  87   3                  
  88   3                  case 0x0b:              //AUX IN
  89   3                    if(disp==0)
  90   3                    {
  91   4                      p[1] = Channel[0] = 1;
  92   4                      Channel_select(Channel);
  93   4                      I2C_SW_Send(_24c02_addr,p,2);
  94   4                    }
  95   3                  break;
  96   3                              
  97   3                  case 0x0c:              //BLUETOOTH
  98   3                    if(ST_BY)
  99   3                    {
C51 COMPILER V9.56.0.0   IR                                                                12/13/2017 15:21:58 PAGE 3   

 100   4                        Channel_flag = 1;
 101   4                        input_mode = 0x05;
 102   4                        LED_Flag = 0x02;                
 103   4                      if(BT_connect == 0)
 104   4                      {
 105   5                        Bluetooth_Test_Task();
 106   5      
 107   5                      }
 108   4                      else
 109   4                      {
 110   5                        if(disp==0)
 111   5                        {
 112   6                          BT_Play_Pause();
 113   6                        }
 114   5                        else if(disp>2) 
 115   5                        {
 116   6                          BT_patch(); 
 117   6                        }
 118   5                      }
 119   4                    }
 120   3      
 121   3                  break;
 122   3      
 123   3                  case 0x0d:              //OPTICAL
 124   3                    if( ST_BY )
 125   3                    if(disp==0)USB_FWD_TASK();
 126   3                  break;
 127   3                  
 128   3                  case 0x0E:              //COAXIAL
 129   3                    if( ST_BY )
 130   3                    if(disp==0)USB_REV_TASK();
 131   3                  break;
 132   3      
 133   3                  case 0x12:              //VOL+
 134   3                    disp_flag=0;
 135   3                    if( ST_BY )
 136   3                    {
 137   4                      BD_VOL_A();     
 138   4                    }
 139   3                  break;
 140   3      
 141   3                  case 0x13:              //VOL-
 142   3                    disp_flag=0;
 143   3                    if( ST_BY )
 144   3                    {
 145   4                      BD_VOL_B();
 146   4                    }
 147   3                  break;
 148   3      
 149   3                  case 0x14:              //ON-OFF
 150   3                    if(disp==0)Power_Flag = ~Power_Flag;
 151   3                    LED_Flag = 0x01;
 152   3                  break;
 153   3      
 154   3                  case 0x15:              //MUTE
 155   3                    if( SYS_power_flag && (disp==0) )
 156   3                    {
 157   4                      AMP_MUTE = ~AMP_MUTE;
 158   4      //                LED_Flag = ~LED_Flag;
 159   4      //                if(LED_Flag==0)
 160   4      //                {
 161   4      //                  if(Channel[0])
C51 COMPILER V9.56.0.0   IR                                                                12/13/2017 15:21:58 PAGE 4   

 162   4      //                    LED_G = 0;
 163   4      //                  else if((BT_DET)&&(Channel[0]==0))
 164   4      //                    LED_B = 0;
 165   4      //                }
 166   4                    }
 167   3      
 168   3                  break;
 169   3      
 170   3                  case 0x18:              //HDMI
 171   3                    if( ST_BY )
 172   3                    if(disp==0) USB_PLAY_TASK();
 173   3                  break;
 174   3                  default:
 175   3                    irwork = IDLE;
 176   3                    break;
 177   3                }
 178   2              }
 179   1          LED_Flag = 3;
 180   1          if(LED_ON_Flag)
 181   1          {
 182   2            LED_Flag = 0;
 183   2          } 
 184   1          disp_flag=0;
 185   1      }

C51 COMPILATION COMPLETE.  1 WARNING(S),  16 ERROR(S)
