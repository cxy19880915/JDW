C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/12/2018 13:27:29 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TASK_DEAL
OBJECT MODULE PLACED IN .\Output\task_deal.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\task_deal.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\task_deal.lst) TABS(2) OBJECT(.\Output\task_deal.obj)

line level    source

   1          #define task_GLOBALS
   2          #include "task_deal.h"
   3          #include "sysinit.h"
   4          
   5          bit led_flag,flag_m = 0,flag_s = 0;
   6          UINT16 sys_flag=0x00;
   7          UINT8 VOL_LED=0;
   8          extern  UINT8 source_in,mode_in,VOL_level;
   9          extern  bit Recive_flag;
  10          extern  void  NPCA110P_init(void);
  11          extern  void __delay_10ms( UINT16 u16CNT );
  12          
  13          extern  void  NPCA110P_SOURCE(void);
  14          extern  void  NPCA110P_VOL(void);
  15          extern  void  NPCA110P_MODE(void);
  16          //unsigned char volume_Control[];
  17          void  POWER_ON_OFF(void);
  18          void  SYS_SOURCE(void);
  19          void  SYS_VOL_A(void);
  20          void  SYS_VOL_B(void);
  21          void  SYS_MODE(void);
  22          
  23          void  POWER_ON_OFF(void)
  24          {
  25   1        if((sys_flag & sys_power_on)&&(power_flag == 1))
  26   1        {
  27   2          clr_EA;
  28   2          MUTE = 1;
  29   2          ST_BY = 1;
  30   2          sys_flag = sys_flag & (~sys_power_on);
  31   2          sys_flag = sys_flag | sys_power_off;
  32   2          __delay_10ms(20);
  33   2          set_EA;
  34   2          set_TR0;                             //Timer0 run
  35   2          sys_flag = sys_flag | sys_mode;
  36   2      //    mode_in=2;
  37   2      //    source_in= 1;
  38   2          VOL_level = 22;
  39   2          SYS_MODE();
  40   2      //    sys_flag = sys_flag | sys_source;
  41   2      //    source_in--;
  42   2      //    SYS_SOURCE();
  43   2      //    sys_flag = sys_flag | sys_volA;
  44   2      //    VOL_level--;
  45   2      //    SYS_VOL_A();
  46   2          MUTE = 0;
  47   2          
  48   2          
  49   2      //    set_TR0;
  50   2        }
  51   1        else if((sys_flag & sys_power_off)&&(power_flag == 0))
  52   1        {
  53   2          clr_EA;
  54   2          BT_POWER = 0;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/12/2018 13:27:29 PAGE 2   

  55   2          MUTE = 1;
  56   2          __delay_10ms(20);
  57   2          ST_BY = 0;
  58   2          sys_flag = sys_flag & (~sys_power_off);
  59   2          sys_flag = sys_flag | sys_power_on;
  60   2          AUX1_LED = 1;AUX2_LED = 1;BT_LED = 1;
  61   2          MUSIC_LED = 1;MOVIE_LED = 1;VOICE_LED = 1;
  62   2          __delay_10ms(30);
  63   2          set_EA;
  64   2          
  65   2      //    set_TR0;
  66   2        }
  67   1        
  68   1      }
  69          
  70          void  SYS_SOURCE(void)
  71          {
  72   1        if(sys_flag & sys_source)
  73   1        {
  74   2          if(!MUTE){MUTE = 1;flag_s = 1;}
  75   2          sys_flag = sys_flag & (~sys_source); 
  76   2          BT_POWER = 0;
  77   2          __delay_10ms(20);
  78   2      //    switch(source_in)
  79   2      //    {
  80   2      //      case  0:
  81   2      //        source_in = 1;
  82   2      //      break;
  83   2      //      case 1:
  84   2      //        source_in = 2;
  85   2      //      break;
  86   2      //      case 2:
  87   2      //        source_in = 3;
  88   2      //      default:
  89   2      //        source_in = 0;
  90   2      //      break;
  91   2      //    }
  92   2          if(source_in>3)
  93   2          {
  94   3            source_in = 1;      
  95   3          }
  96   2          else if(source_in==3)   
  97   2          {
  98   3            BT_POWER = 1;
  99   3          }
 100   2          NPCA110P_SOURCE();
 101   2          MUTE = 0;
 102   2      //    set_TR0;
 103   2          led_flag = 1;
 104   2          if(flag_s){MUTE = 0;flag_s = 0;}
 105   2        }
 106   1      }
 107          
 108          void  SYS_MODE(void)
 109          {
 110   1        if(sys_flag & sys_mode)
 111   1        {
 112   2      //    if(!MUTE){MUTE = 1;flag_m = 1;}
 113   2          if(!MUTE){MUTE = 1;flag_s = 1;flag_m = 1;}
 114   2      //    if(ST_BY)
 115   2      //    {
 116   2      //      volume_Control[0]=0x00;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/12/2018 13:27:29 PAGE 3   

 117   2      //      volume_Control[2]=0x00;
 118   2      //      I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 119   2      //    }
 120   2          sys_flag = sys_flag & (~sys_mode);
 121   2      //    mode_in++;
 122   2          if(mode_in>3)
 123   2          {
 124   3            mode_in = 1;      
 125   3          }
 126   2          NPCA110P_init();
 127   2          
 128   2      //    set_TR0;
 129   2          led_flag = 1;
 130   2          if((flag_s)||(flag_m)){MUTE = 0;flag_s = 0;flag_m = 0;}
 131   2      //    sys_flag = sys_flag | sys_source;
 132   2      ////    KEY_VALUE = ir_source;
 133   2      //    source_in--;
 134   2      //    if(flag_m){MUTE = 0;flag_m = 0;}
 135   2        }
 136   1      }
 137          
 138          void  SYS_VOL_A(void)
 139          {
 140   1        if(sys_flag & sys_volA)
 141   1        {
 142   2          sys_flag = sys_flag & (~sys_volA);
 143   2          if(VOL_level>=30)
 144   2          {
 145   3            VOL_level = 30;
 146   3            return;
 147   3          }
 148   2          VOL_level++;
 149   2          NPCA110P_VOL();
 150   2          
 151   2      //    set_TR0;
 152   2          led_flag = 1;
 153   2          VOL_LED = 1;
 154   2        }
 155   1      }
 156          
 157          void  SYS_VOL_B(void)
 158          {
 159   1        if(sys_flag & sys_volB)
 160   1        {
 161   2          sys_flag = sys_flag & (~sys_volB);
 162   2          if((VOL_level<=0)||(VOL_level>30))
 163   2          {
 164   3            VOL_level = 0;
 165   3            return;
 166   3          }
 167   2          VOL_level--;
 168   2          NPCA110P_VOL();
 169   2          
 170   2      //    set_TR0;
 171   2          led_flag = 1;
 172   2          VOL_LED = 1;
 173   2        }
 174   1      }
 175          
 176          void  GPIO_MUTE(void)
 177          {
 178   1        if(MUTE)MUTE = 0;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/12/2018 13:27:29 PAGE 4   

 179   1        else  MUTE = 1;
 180   1      //  MUTE = ~MUTE;
 181   1      }
 182          
 183          void  LED_DISPLAY(void)
 184          {
 185   1          if(BT_POWER)
 186   1          if(!BT_DET)
 187   1          {
 188   2            VOL_LED = 1;
 189   2            led_flag = 1;
 190   2            __delay_10ms(50);
 191   2          }
 192   1          if((MUTE)&&(ST_BY))
 193   1          {
 194   2            VOL_LED = 1;
 195   2            led_flag = 1;
 196   2            __delay_10ms(100);
 197   2          }
 198   1        if(led_flag)
 199   1        {
 200   2          if(VOL_LED)
 201   2          {
 202   3            AUX1_LED = 1;AUX2_LED = 1;BT_LED = 1;
 203   3            __delay_10ms(10);
 204   3          }
 205   2          if(source_in == 1)
 206   2          {
 207   3            AUX1_LED = 0;AUX2_LED = 1;BT_LED = 1;
 208   3            __delay_10ms(7);
 209   3          }
 210   2          if(source_in == 2)
 211   2          {
 212   3            AUX1_LED = 1;AUX2_LED = 0;BT_LED = 1;
 213   3            __delay_10ms(7);
 214   3          }
 215   2          if(source_in == 3)
 216   2          {
 217   3            AUX1_LED = 1;AUX2_LED = 1;BT_LED = 0;
 218   3            __delay_10ms(7);
 219   3          }
 220   2          if(mode_in == 1)
 221   2          {
 222   3            MUSIC_LED = 0;MOVIE_LED = 1;VOICE_LED = 1;
 223   3            __delay_10ms(7);
 224   3          }
 225   2          if(mode_in == 2)
 226   2          {
 227   3            MUSIC_LED = 1;MOVIE_LED = 0;VOICE_LED = 1;
 228   3            __delay_10ms(7);
 229   3          }
 230   2          if(mode_in == 3)
 231   2          {
 232   3            MUSIC_LED = 1;MOVIE_LED = 1;VOICE_LED = 0;
 233   3            __delay_10ms(7);
 234   3          }
 235   2          led_flag = 0;
 236   2        }
 237   1        
 238   1      }
 239          
 240          void  IR_EVENT(void)
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/12/2018 13:27:29 PAGE 5   

 241          {
 242   1        switch(KEY_data)
 243   1        {
 244   2          case 0x01:              //BASS+
 245   2          {
 246   3              break;
 247   3          }
 248   2                    
 249   2          case 0x02:              //BASS-
 250   2          {
 251   3            break;
 252   3          }
 253   2                  
 254   2          case 0x03:              //TREBLE+
 255   2          break;
 256   2                  
 257   2          case 0x04:              //TREBLE-
 258   2          break;
 259   2                  
 260   2          case 0x0a:              //??BLUETOOTH??LINE IN
 261   2          break;
 262   2                  
 263   2          case 0x0b:              //AUX IN
 264   2          break;
 265   2                              
 266   2          case 0x0c:              //BLUETOOTH
 267   2          break;
 268   2      
 269   2          case 0x0d:              //OPTICAL
 270   2          break;
 271   2                  
 272   2          case 0x0E:              //COAXIAL
 273   2          break;
 274   2      
 275   2          case 0x12:              //VOL+
 276   2          break;
 277   2      
 278   2          case 0x13:              //VOL-
 279   2          break;
 280   2      
 281   2          case 0x14:              //ON-OFF
 282   2          break;
 283   2      
 284   2          case 0x15:              //MUTE
 285   2          break;
 286   2      
 287   2          case 0x18:              //HDMI
 288   2          break;
 289   2        }
 290   1      }
 291          
 292          
 293          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    444    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/12/2018 13:27:29 PAGE 6   

   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
