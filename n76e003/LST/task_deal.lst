C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/08/2018 16:11:08 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TASK_DEAL
OBJECT MODULE PLACED IN .\Output\task_deal.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\task_deal.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\task_deal.lst) TABS(2) OBJECT(.\Output\task_deal.obj)

line level    source

   1          #define task_GLOBALS
   2          #include "task_deal.h"
   3          #include "sysinit.h"
   4          
   5          bit led_flag;
   6          UINT16 sys_flag=0x00;
   7          UINT8 VOL_LED=0;
   8          extern  UINT8 source_in,mode_in,VOL_level;
   9          extern  bit Recive_flag;
  10          extern  void  NPCA110P_init(void);
  11          extern  void __delay_10ms( UINT16 u16CNT );
  12          
  13          extern  void  NPCA110P_SOURCE(void);
  14          extern  void  NPCA110P_VOL(void);
  15          //extern  void  NPCA110P_VOL_B(void);
  16          extern  void  NPCA110P_MODE(void);
  17          
  18          void  POWER_ON_OFF(void);
  19          void  SYS_SOURCE(void);
  20          void  SYS_VOL_A(void);
  21          void  SYS_VOL_B(void);
  22          void  SYS_MODE(void);
  23          
  24          void  POWER_ON_OFF(void)
  25          {
  26   1        if((sys_flag & sys_power_on)&&(power_flag == 1))
  27   1        {
  28   2          clr_EA;
  29   2          MUTE = 1;
  30   2          ST_BY = 1;
  31   2          sys_flag = sys_flag & (~sys_power_on);
  32   2          sys_flag = sys_flag | sys_power_off;
  33   2          __delay_10ms(20);
  34   2          set_EA;
  35   2          set_TR0;                             //Timer0 run
  36   2          sys_flag = sys_flag | sys_mode;
  37   2          mode_in--;
  38   2          SYS_MODE();
  39   2      //    sys_flag = sys_flag | sys_source;
  40   2      //    source_in--;
  41   2      //    SYS_SOURCE();
  42   2      //    sys_flag = sys_flag | sys_volA;
  43   2      //    VOL_level--;
  44   2      //    SYS_VOL_A();
  45   2          MUTE = 0;
  46   2          
  47   2          
  48   2      //    set_TR0;
  49   2        }
  50   1        else if((sys_flag & sys_power_off)&&(power_flag == 0))
  51   1        {
  52   2          clr_EA;
  53   2          MUTE = 1;
  54   2          ST_BY = 0;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/08/2018 16:11:08 PAGE 2   

  55   2          sys_flag = sys_flag & (~sys_power_off);
  56   2          sys_flag = sys_flag | sys_power_on;
  57   2          AUX1_LED = 1;AUX2_LED = 1;BT_LED = 1;
  58   2          MUSIC_LED = 1;MOVIE_LED = 1;VOICE_LED = 1;
  59   2          __delay_10ms(30);
  60   2          set_EA;
  61   2          
  62   2      //    set_TR0;
  63   2        }
  64   1        
  65   1      }
  66          
  67          void  SYS_SOURCE(void)
  68          {
  69   1        if(sys_flag & sys_source)
  70   1        {
  71   2          sys_flag = sys_flag & (~sys_source); 
  72   2          BT_POWER = 0;
  73   2          source_in++;
  74   2          if(source_in>3)
  75   2          {
  76   3            source_in = 1;      
  77   3          }
  78   2          else if(source_in==3)   
  79   2          {
  80   3            BT_POWER = 1;
  81   3          }
  82   2          NPCA110P_SOURCE();
  83   2          
  84   2      //    set_TR0;
  85   2          led_flag = 1;
  86   2        }
  87   1      }
  88          
  89          void  SYS_MODE(void)
  90          {
  91   1        if(sys_flag & sys_mode)
  92   1        {
  93   2          sys_flag = sys_flag & (~sys_mode);
  94   2          mode_in++;
  95   2          if(mode_in>3)
  96   2          {
  97   3            mode_in = 1;      
  98   3          }
  99   2          NPCA110P_init();
 100   2          
 101   2      //    set_TR0;
 102   2          led_flag = 1;
 103   2        }
 104   1      }
 105          
 106          void  SYS_VOL_A(void)
 107          {
 108   1        if(sys_flag & sys_volA)
 109   1        {
 110   2          sys_flag = sys_flag & (~sys_volA);
 111   2          if(VOL_level>=30)
 112   2          {
 113   3            VOL_level = 30;
 114   3            return;
 115   3          }
 116   2          VOL_level++;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/08/2018 16:11:08 PAGE 3   

 117   2          NPCA110P_VOL();
 118   2          
 119   2      //    set_TR0;
 120   2          led_flag = 1;
 121   2          VOL_LED = 1;
 122   2        }
 123   1      }
 124          
 125          void  SYS_VOL_B(void)
 126          {
 127   1        if(sys_flag & sys_volB)
 128   1        {
 129   2          sys_flag = sys_flag & (~sys_volB);
 130   2          if((VOL_level<=0)||(VOL_level>30))
 131   2          {
 132   3            VOL_level = 0;
 133   3            return;
 134   3          }
 135   2          VOL_level--;
 136   2          NPCA110P_VOL();
 137   2          
 138   2      //    set_TR0;
 139   2          led_flag = 1;
 140   2          VOL_LED = 1;
 141   2        }
 142   1      }
 143          
 144          void  GPIO_MUTE(void)
 145          {
 146   1        if(MUTE)MUTE = 0;
 147   1        else  MUTE = 1;
 148   1      //  MUTE = ~MUTE;
 149   1      }
 150          
 151          void  LED_DISPLAY(void)
 152          {
 153   1          if(!BT_DET)
 154   1          {
 155   2            VOL_LED = 1;
 156   2            led_flag = 1;
 157   2            __delay_10ms(20);
 158   2          }
 159   1          if((MUTE)&&(ST_BY))
 160   1          {
 161   2            VOL_LED = 1;
 162   2            led_flag = 1;
 163   2            __delay_10ms(70);
 164   2          }
 165   1        if(led_flag)
 166   1        {
 167   2          if(VOL_LED)
 168   2          {
 169   3            AUX1_LED = 1;AUX2_LED = 1;BT_LED = 1;
 170   3            __delay_10ms(70);
 171   3          }
 172   2          if(source_in == 1)
 173   2          {
 174   3            AUX1_LED = 0;AUX2_LED = 1;BT_LED = 1;
 175   3            __delay_10ms(7);
 176   3          }
 177   2          if(source_in == 2)
 178   2          {
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/08/2018 16:11:08 PAGE 4   

 179   3            AUX1_LED = 1;AUX2_LED = 0;BT_LED = 1;
 180   3            __delay_10ms(7);
 181   3          }
 182   2          if(source_in == 3)
 183   2          {
 184   3            AUX1_LED = 1;AUX2_LED = 1;BT_LED = 0;
 185   3            __delay_10ms(7);
 186   3          }
 187   2          if(mode_in == 1)
 188   2          {
 189   3            MUSIC_LED = 0;MOVIE_LED = 1;VOICE_LED = 1;
 190   3            __delay_10ms(7);
 191   3          }
 192   2          if(mode_in == 2)
 193   2          {
 194   3            MUSIC_LED = 1;MOVIE_LED = 0;VOICE_LED = 1;
 195   3            __delay_10ms(7);
 196   3          }
 197   2          if(mode_in == 3)
 198   2          {
 199   3            MUSIC_LED = 1;MOVIE_LED = 1;VOICE_LED = 0;
 200   3            __delay_10ms(7);
 201   3          }
 202   2          led_flag = 0;
 203   2        }
 204   1        
 205   1      }
 206          
 207          void  IR_EVENT(void)
 208          {
 209   1        switch(KEY_data)
 210   1        {
 211   2          case 0x01:              //BASS+
 212   2          {
 213   3              break;
 214   3          }
 215   2                    
 216   2          case 0x02:              //BASS-
 217   2          {
 218   3            break;
 219   3          }
 220   2                  
 221   2          case 0x03:              //TREBLE+
 222   2          break;
 223   2                  
 224   2          case 0x04:              //TREBLE-
 225   2          break;
 226   2                  
 227   2          case 0x0a:              //??BLUETOOTH??LINE IN
 228   2          break;
 229   2                  
 230   2          case 0x0b:              //AUX IN
 231   2          break;
 232   2                              
 233   2          case 0x0c:              //BLUETOOTH
 234   2          break;
 235   2      
 236   2          case 0x0d:              //OPTICAL
 237   2          break;
 238   2                  
 239   2          case 0x0E:              //COAXIAL
 240   2          break;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/08/2018 16:11:08 PAGE 5   

 241   2      
 242   2          case 0x12:              //VOL+
 243   2          break;
 244   2      
 245   2          case 0x13:              //VOL-
 246   2          break;
 247   2      
 248   2          case 0x14:              //ON-OFF
 249   2          break;
 250   2      
 251   2          case 0x15:              //MUTE
 252   2          break;
 253   2      
 254   2          case 0x18:              //HDMI
 255   2          break;
 256   2        }
 257   1      }
 258          
 259          
 260          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    391    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
