C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/10/2018 21:54:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TASK_DEAL
OBJECT MODULE PLACED IN .\Output\task_deal.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE N76E003\Code\task_deal.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\task_deal.lst) TABS(2) OBJECT(.\Output\task_deal.obj)

line level    source

   1          #define task_GLOBALS
   2          #include "task_deal.h"
   3          #include "sysinit.h"
   4          
   5          bit led_flag,flag_m = 0,flag_s = 0;
   6          UINT16 sys_flag=0x00;
   7          UINT8 VOL_LED=0;
   8          extern  UINT8 source_in,mode_in,VOL_level;
   9          extern  bit Recive_flag;
  10          extern  void  NPCA110P_init(void);
  11          extern  void __delay_10ms( UINT16 u16CNT );
  12          
  13          extern  void  NPCA110P_SOURCE(void);
  14          extern  void  NPCA110P_VOL(void);
  15          extern  void  NPCA110P_MODE(void);
  16          //unsigned char volume_Control[];
  17          void  POWER_ON_OFF(void);
  18          void  SYS_SOURCE(void);
  19          void  SYS_VOL_A(void);
  20          void  SYS_VOL_B(void);
  21          void  SYS_MODE(void);
  22          
  23          void  POWER_ON_OFF(void)
  24          {
  25   1        if((sys_flag & sys_power_on)&&(power_flag == 1))
  26   1        {
  27   2          clr_EA;
  28   2          MUTE = 1;
  29   2          ST_BY = 1;
  30   2          sys_flag = sys_flag & (~sys_power_on);
  31   2          sys_flag = sys_flag | sys_power_off;
  32   2          __delay_10ms(20);
  33   2          set_EA;
  34   2          set_TR0;                             //Timer0 run
  35   2          sys_flag = sys_flag | sys_mode;
  36   2      //    mode_in=2;
  37   2      //    source_in= 1;
  38   2          VOL_level = 22;
  39   2          SYS_MODE();
  40   2      //    sys_flag = sys_flag | sys_source;
  41   2      //    source_in--;
  42   2      //    SYS_SOURCE();
  43   2      //    sys_flag = sys_flag | sys_volA;
  44   2      //    VOL_level--;
  45   2      //    SYS_VOL_A();
  46   2          MUTE = 0;
  47   2          
  48   2          
  49   2      //    set_TR0;
  50   2        }
  51   1        else if((sys_flag & sys_power_off)&&(power_flag == 0))
  52   1        {
  53   2          clr_EA;
  54   2          MUTE = 1;
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/10/2018 21:54:04 PAGE 2   

  55   2          ST_BY = 0;
  56   2          sys_flag = sys_flag & (~sys_power_off);
  57   2          sys_flag = sys_flag | sys_power_on;
  58   2          AUX1_LED = 1;AUX2_LED = 1;BT_LED = 1;
  59   2          MUSIC_LED = 1;MOVIE_LED = 1;VOICE_LED = 1;
  60   2          __delay_10ms(30);
  61   2          set_EA;
  62   2          
  63   2      //    set_TR0;
  64   2        }
  65   1        
  66   1      }
  67          
  68          void  SYS_SOURCE(void)
  69          {
  70   1        if(sys_flag & sys_source)
  71   1        {
  72   2          if(!MUTE){MUTE = 1;flag_s = 1;}
  73   2          sys_flag = sys_flag & (~sys_source); 
  74   2          BT_POWER = 0;
  75   2      //    switch(source_in)
  76   2      //    {
  77   2      //      case  0:
  78   2      //        source_in = 1;
  79   2      //      break;
  80   2      //      case 1:
  81   2      //        source_in = 2;
  82   2      //      break;
  83   2      //      case 2:
  84   2      //        source_in = 3;
  85   2      //      default:
  86   2      //        source_in = 0;
  87   2      //      break;
  88   2      //    }
  89   2          if(source_in>3)
  90   2          {
  91   3            source_in = 1;      
  92   3          }
  93   2          else if(source_in==3)   
  94   2          {
  95   3            BT_POWER = 1;
  96   3          }
  97   2          NPCA110P_SOURCE();
  98   2          MUTE = 0;
  99   2      //    set_TR0;
 100   2          led_flag = 1;
 101   2          if(flag_s){MUTE = 0;flag_s = 0;}
 102   2        }
 103   1      }
 104          
 105          void  SYS_MODE(void)
 106          {
 107   1        if(sys_flag & sys_mode)
 108   1        {
 109   2      //    if(!MUTE){MUTE = 1;flag_m = 1;}
 110   2          if(!MUTE){MUTE = 1;flag_s = 1;flag_m = 1;}
 111   2      //    if(ST_BY)
 112   2      //    {
 113   2      //      volume_Control[0]=0x00;
 114   2      //      volume_Control[2]=0x00;
 115   2      //      I2C_Write_Command(NPCA110P_EEPROM_SLA,volume_Control,3);
 116   2      //    }
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/10/2018 21:54:04 PAGE 3   

 117   2          sys_flag = sys_flag & (~sys_mode);
 118   2      //    mode_in++;
 119   2          if(mode_in>3)
 120   2          {
 121   3            mode_in = 1;      
 122   3          }
 123   2          NPCA110P_init();
 124   2          
 125   2      //    set_TR0;
 126   2          led_flag = 1;
 127   2          if((flag_s)||(flag_m)){MUTE = 0;flag_s = 0;flag_m = 0;}
 128   2      //    sys_flag = sys_flag | sys_source;
 129   2      ////    KEY_VALUE = ir_source;
 130   2      //    source_in--;
 131   2      //    if(flag_m){MUTE = 0;flag_m = 0;}
 132   2        }
 133   1      }
 134          
 135          void  SYS_VOL_A(void)
 136          {
 137   1        if(sys_flag & sys_volA)
 138   1        {
 139   2          sys_flag = sys_flag & (~sys_volA);
 140   2          if(VOL_level>=30)
 141   2          {
 142   3            VOL_level = 30;
 143   3            return;
 144   3          }
 145   2          VOL_level++;
 146   2          NPCA110P_VOL();
 147   2          
 148   2      //    set_TR0;
 149   2          led_flag = 1;
 150   2          VOL_LED = 1;
 151   2        }
 152   1      }
 153          
 154          void  SYS_VOL_B(void)
 155          {
 156   1        if(sys_flag & sys_volB)
 157   1        {
 158   2          sys_flag = sys_flag & (~sys_volB);
 159   2          if((VOL_level<=0)||(VOL_level>30))
 160   2          {
 161   3            VOL_level = 0;
 162   3            return;
 163   3          }
 164   2          VOL_level--;
 165   2          NPCA110P_VOL();
 166   2          
 167   2      //    set_TR0;
 168   2          led_flag = 1;
 169   2          VOL_LED = 1;
 170   2        }
 171   1      }
 172          
 173          void  GPIO_MUTE(void)
 174          {
 175   1        if(MUTE)MUTE = 0;
 176   1        else  MUTE = 1;
 177   1      //  MUTE = ~MUTE;
 178   1      }
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/10/2018 21:54:04 PAGE 4   

 179          
 180          void  LED_DISPLAY(void)
 181          {
 182   1          if(BT_POWER)
 183   1          if(!BT_DET)
 184   1          {
 185   2            VOL_LED = 1;
 186   2            led_flag = 1;
 187   2            __delay_10ms(50);
 188   2          }
 189   1          if((MUTE)&&(ST_BY))
 190   1          {
 191   2            VOL_LED = 1;
 192   2            led_flag = 1;
 193   2            __delay_10ms(100);
 194   2          }
 195   1        if(led_flag)
 196   1        {
 197   2          if(VOL_LED)
 198   2          {
 199   3            AUX1_LED = 1;AUX2_LED = 1;BT_LED = 1;
 200   3            __delay_10ms(10);
 201   3          }
 202   2          if(source_in == 1)
 203   2          {
 204   3            AUX1_LED = 0;AUX2_LED = 1;BT_LED = 1;
 205   3            __delay_10ms(7);
 206   3          }
 207   2          if(source_in == 2)
 208   2          {
 209   3            AUX1_LED = 1;AUX2_LED = 0;BT_LED = 1;
 210   3            __delay_10ms(7);
 211   3          }
 212   2          if(source_in == 3)
 213   2          {
 214   3            AUX1_LED = 1;AUX2_LED = 1;BT_LED = 0;
 215   3            __delay_10ms(7);
 216   3          }
 217   2          if(mode_in == 1)
 218   2          {
 219   3            MUSIC_LED = 0;MOVIE_LED = 1;VOICE_LED = 1;
 220   3            __delay_10ms(7);
 221   3          }
 222   2          if(mode_in == 2)
 223   2          {
 224   3            MUSIC_LED = 1;MOVIE_LED = 0;VOICE_LED = 1;
 225   3            __delay_10ms(7);
 226   3          }
 227   2          if(mode_in == 3)
 228   2          {
 229   3            MUSIC_LED = 1;MOVIE_LED = 1;VOICE_LED = 0;
 230   3            __delay_10ms(7);
 231   3          }
 232   2          led_flag = 0;
 233   2        }
 234   1        
 235   1      }
 236          
 237          void  IR_EVENT(void)
 238          {
 239   1        switch(KEY_data)
 240   1        {
C51 COMPILER V9.56.0.0   TASK_DEAL                                                         01/10/2018 21:54:04 PAGE 5   

 241   2          case 0x01:              //BASS+
 242   2          {
 243   3              break;
 244   3          }
 245   2                    
 246   2          case 0x02:              //BASS-
 247   2          {
 248   3            break;
 249   3          }
 250   2                  
 251   2          case 0x03:              //TREBLE+
 252   2          break;
 253   2                  
 254   2          case 0x04:              //TREBLE-
 255   2          break;
 256   2                  
 257   2          case 0x0a:              //??BLUETOOTH??LINE IN
 258   2          break;
 259   2                  
 260   2          case 0x0b:              //AUX IN
 261   2          break;
 262   2                              
 263   2          case 0x0c:              //BLUETOOTH
 264   2          break;
 265   2      
 266   2          case 0x0d:              //OPTICAL
 267   2          break;
 268   2                  
 269   2          case 0x0E:              //COAXIAL
 270   2          break;
 271   2      
 272   2          case 0x12:              //VOL+
 273   2          break;
 274   2      
 275   2          case 0x13:              //VOL-
 276   2          break;
 277   2      
 278   2          case 0x14:              //ON-OFF
 279   2          break;
 280   2      
 281   2          case 0x15:              //MUTE
 282   2          break;
 283   2      
 284   2          case 0x18:              //HDMI
 285   2          break;
 286   2        }
 287   1      }
 288          
 289          
 290          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    428    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
