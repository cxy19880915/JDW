C51 COMPILER V9.56.0.0   TIMER0                                                            01/04/2018 14:08:41 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIMER0
OBJECT MODULE PLACED IN .\Output\Timer0.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Common\Timer0.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\Include) DE
                    -FINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Timer0.lst) TABS(2) OBJECT(.\Output\Timer0.obj)

line level    source

   1          #include  "timer0.h"
   2          
   3          extern  UINT8 adc_count,KEY_VALUE;
   4          extern  bit   ms_800_flag,ms_200_flag;
   5          extern  UINT8 key_flag;
   6          extern  void __delay_10ms( UINT16 u16CNT );
   7          
   8          UINT16  adc_data = 0;
   9          UINT8 adc_V = 0;
  10          UINT8 key_status = 0;
  11          bit   adc_V_flag = 0;//,VA=0,VB=0,V_M = 0,V_S = 0,V_power = 0;
  12          bit   adc_PWM_flag = 0;
  13          //UINT8 u8TH0_Tmp_1ms,u8TL0_Tmp_1ms;
  14          UINT8 adc_flag=0,nm=0,mn=0;
  15          
  16          //#define TH0_INIT_1ms  16000//13290
  17          //#define TL0_INIT_1ms  16000//13290
  18          //#define u8TH0_Tmp_1ms (65536-TH0_INIT_1ms)/256
  19          //#define u8TL0_Tmp_1ms (65536-TL0_INIT_1ms)%256
  20          
  21          void timer0_init(void)
  22          {
  23   1      //  set_T0M;    //ÏµÍ³Ê±ÖÓ
  24   1        clr_T0M;
  25   1      //  u8TH0_Tmp_1ms = (65536-TH0_INIT_1ms)/256;
  26   1      //  u8TL0_Tmp_1ms = (65536-TL0_INIT_1ms)%256;
  27   1        TIMER0_MODE1_ENABLE;
  28   1        TH0 = HIBYTE(TIMER_DIV12_VALUE_10ms);
  29   1        TL0 = LOBYTE(TIMER_DIV12_VALUE_10ms);
  30   1        set_ET0;
  31   1      }
  32          
  33          #if 1
  34          void Timer0_ISR (void) interrupt 1 
  35          {
  36   1        clr_TR0;
  37   1        TH0 = TIMER_DIV12_VALUE_10ms;
  38   1          TL0 = TIMER_DIV12_VALUE_10ms;
  39   1        adc_flag++;
  40   1      //  if(mn>20)
  41   1      //  {
  42   1      //    nm = 1;
  43   1      //  }
  44   1        if(adc_flag>5)//50ms
  45   1        {
  46   2          adc_data = adc_start();
  47   2          adc_V = adc_data;
  48   2          if(key_status & 0x80)mn++;
  49   2          if(adc_V < 0xfd)        //key down
  50   2          {
  51   3            if(adc_V > V_2_4)
  52   3            {
  53   4      //        if(key_status&0x01)
  54   4      //        {
C51 COMPILER V9.56.0.0   TIMER0                                                            01/04/2018 14:08:41 PAGE 2   

  55   4      //          key_flag = 1;
  56   4      //          KEY_VALUE =  POWER;
  57   4      //        }       
  58   4              key_status = key_status | 0x81;
  59   4            }
  60   3            else if(adc_V > V_2_0)
  61   3            {
  62   4              if((key_status&0x02)&&(mn>15))
  63   4              {
  64   5                key_flag = 1;
  65   5                KEY_VALUE =  VOL_A;
  66   5              }
  67   4              key_status = key_status | 0x82;
  68   4            }
  69   3            else if(adc_V > V_1_5)
  70   3            {
  71   4              if((key_status&0x04)&&(mn>15))
  72   4              {
  73   5                key_flag = 1;
  74   5                KEY_VALUE =  VOL_B;
  75   5              }
  76   4              key_status = key_status | 0x84;
  77   4            }
  78   3            else if(adc_V > V_1_2)
  79   3            {
  80   4      //        if(key_status&0x08)
  81   4      //        {
  82   4      //          key_flag = 1;
  83   4      //          KEY_VALUE = SOURCE;
  84   4      //        }
  85   4              key_status = key_status | 0x88;
  86   4            }
  87   3            else if(adc_V > V_0_7)
  88   3            {
  89   4      //        if(key_status&0x10)
  90   4      //        {
  91   4      //          key_flag = 1;
  92   4      //          KEY_VALUE = MODE;         
  93   4      //        }
  94   4              key_status = key_status | 0x90;
  95   4            }
  96   3          }
  97   2          else
  98   2          {
  99   3            if(key_status&0x80)
 100   3            {
 101   4              if(key_status&0x01)
 102   4              {
 103   5                key_flag = 1;
 104   5                KEY_VALUE =  POWER;
 105   5              } 
 106   4              if(key_status&0x02)
 107   4              {
 108   5                key_flag = 1;
 109   5                KEY_VALUE =  VOL_A;
 110   5              }
 111   4              if(key_status&0x04)
 112   4              {
 113   5                key_flag = 1;
 114   5                KEY_VALUE =  VOL_B;
 115   5              }
 116   4              if(key_status&0x08)
C51 COMPILER V9.56.0.0   TIMER0                                                            01/04/2018 14:08:41 PAGE 3   

 117   4              {
 118   5                key_flag = 1;
 119   5                KEY_VALUE = SOURCE;
 120   5              }
 121   4              if(key_status&0x10)
 122   4              {
 123   5                key_flag = 1;
 124   5                KEY_VALUE = MODE;         
 125   5              }
 126   4            }
 127   3            key_status = key_status & 0x00;//key up
 128   3            mn = 0;
 129   3          }
 130   2          adc_flag = 0;
 131   2        }
 132   1        set_TR0;
 133   1      }
 134          
 135          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    284    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
