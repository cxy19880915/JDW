C51 COMPILER V9.56.0.0   TIMER0                                                            01/12/2018 13:51:22 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIMER0
OBJECT MODULE PLACED IN .\Output\Timer0.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Common\Timer0.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include;.\Include) DE
                    -FINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Timer0.lst) TABS(2) OBJECT(.\Output\Timer0.obj)

line level    source

   1          #include  "timer0.h"
   2          
   3          extern  UINT8 adc_count,KEY_VALUE;
   4          extern  bit   Recive_flag;
   5          extern  UINT8 key_flag;
   6          extern  void __delay_10ms( UINT16 u16CNT );
   7          extern  UINT8 ir_status,ir_count;
   8          UINT16  adc_data = 0;
   9          UINT8 adc_V = 0;
  10          UINT8 key_status = 0;
  11          bit   _50ms_flag = 0,_50ms_ir=0;//,VA=0,VB=0,V_M = 0,V_S = 0,V_power = 0;
  12          bit   adc_PWM_flag = 0;
  13          //UINT8 u8TH0_Tmp_1ms,u8TL0_Tmp_1ms;
  14          UINT8 adc_flag=0,nm=0,mn=0,ir_n=0;
  15          extern  UINT8 source_in,mode_in;
  16          
  17          //#define TH0_INIT_1ms  16000//13290
  18          //#define TL0_INIT_1ms  16000//13290
  19          //#define u8TH0_Tmp_1ms (65536-TH0_INIT_1ms)/256
  20          //#define u8TL0_Tmp_1ms (65536-TL0_INIT_1ms)%256
  21          
  22          void timer0_init(void)
  23          {
  24   1      //  set_T0M;    //œµÕ≥ ±÷”
  25   1        clr_T0M;
  26   1      //  u8TH0_Tmp_1ms = (65536-TH0_INIT_1ms)/256;
  27   1      //  u8TL0_Tmp_1ms = (65536-TL0_INIT_1ms)%256;
  28   1        TIMER0_MODE1_ENABLE;
  29   1        TH0 = HIBYTE(TIMER_DIV12_VALUE_10ms);
  30   1        TL0 = LOBYTE(TIMER_DIV12_VALUE_10ms);
  31   1        set_ET0;
  32   1      }
  33          void  KEY_SCAN(void)
  34          {
  35   1        if(_50ms_flag)
  36   1        {
  37   2          adc_data = adc_start();
  38   2          adc_V = adc_data;
  39   2          if(key_status & 0x80)
  40   2              mn++;
  41   2          if(adc_V < 0xfd)        //key down
  42   2          {
  43   3            if(adc_V > V_2_4)
  44   3            {     
  45   4              key_status = key_status | 0x81;
  46   4            }
  47   3            else if(adc_V > V_2_0)
  48   3            {
  49   4              if((key_status&0x02)&&(mn>8)&&(power_flag))
  50   4              {
  51   5                key_flag = 1;
  52   5                KEY_VALUE =  VOL_A;
  53   5              }
  54   4              key_status = key_status | 0x82;
C51 COMPILER V9.56.0.0   TIMER0                                                            01/12/2018 13:51:22 PAGE 2   

  55   4            }
  56   3            else if(adc_V > V_1_5)
  57   3            {
  58   4              if((key_status&0x04)&&(mn>8)&&(power_flag))
  59   4              {
  60   5                key_flag = 1;
  61   5                KEY_VALUE =  VOL_B;
  62   5              }
  63   4              key_status = key_status | 0x84;
  64   4            }
  65   3            else if(adc_V > V_1_2)
  66   3            {
  67   4              key_status = key_status | 0x88;
  68   4            }
  69   3            else if(adc_V > V_0_7)
  70   3            {
  71   4              key_status = key_status | 0x90;
  72   4            }
  73   3          }
  74   2          else
  75   2          {
  76   3            if(key_status&0x80)
  77   3            {
  78   4              if(key_status&0x01)
  79   4              {
  80   5                key_flag = 1;
  81   5                KEY_VALUE =  POWER;
  82   5              } 
  83   4              if((key_status&0x02)&&(power_flag))
  84   4              {
  85   5                key_flag = 1;
  86   5                KEY_VALUE =  VOL_A;
  87   5              }
  88   4              if((key_status&0x04)&&(power_flag))
  89   4              {
  90   5                key_flag = 1;
  91   5                KEY_VALUE =  VOL_B;
  92   5              }
  93   4              if((key_status&0x08)&&(power_flag))
  94   4              {
  95   5                key_flag = 1;
  96   5                KEY_VALUE = SOURCE;
  97   5      //          source_in++;
  98   5              }
  99   4              if((key_status&0x10)&&(power_flag))
 100   4              {
 101   5                key_flag = 1;
 102   5                KEY_VALUE = MODE; 
 103   5      //          mode_in++;
 104   5              }
 105   4            }
 106   3            key_status = key_status & 0x00;//key up
 107   3            mn = 0;
 108   3          }
 109   2          _50ms_flag = 0;
 110   2        }
 111   1      }
 112          #if 1
 113          void Timer0_ISR (void) interrupt 1 
 114          {
 115   1        clr_TR0;
 116   1        TH0 = TIMER_DIV12_VALUE_10ms;
C51 COMPILER V9.56.0.0   TIMER0                                                            01/12/2018 13:51:22 PAGE 3   

 117   1         TL0 = TIMER_DIV12_VALUE_10ms;
 118   1        adc_flag++;ir_n++;
 119   1        if(adc_flag>9)
 120   1        {
 121   2          _50ms_flag = 1;
 122   2          adc_flag = 0;
 123   2        }
 124   1        if(ir_n>15)//25
 125   1        {
 126   2          _50ms_ir = 1;
 127   2          ir_n = 0;
 128   2        }
 129   1        #if 0
                if(adc_flag>5)//50ms
                {
                  adc_data = adc_start();
                  adc_V = adc_data;
                  if((key_status & 0x80)||(ir_status & 0x80))
                  {mn++;nm++;}
                  if(nm>15)
                  {
                    if(ir_count>2)
                    {
                      ir_status = ir_status | 0x02;
                      key_flag = 0x80;
                    }
              //      if(ir_count==1)
              //      {
              //        ir_status = ir_status | 0x01;
              //        Recive_flag = 1;
              //      }
              //      if(ir_count==0)
              //      {
              //        ir_status = ir_status | 0x04;
              //      }
                    nm = 0;
                    ir_count = 0;
                  }
                  if(adc_V < 0xfd)        //key down
                  {
                    if(adc_V > V_2_4)
                    {     
                      key_status = key_status | 0x81;
                    }
                    else if(adc_V > V_2_0)
                    {
                      if((key_status&0x02)&&(mn>15))
                      {
                        key_flag = 1;
                        KEY_VALUE =  VOL_A;
                      }
                      key_status = key_status | 0x82;
                    }
                    else if(adc_V > V_1_5)
                    {
                      if((key_status&0x04)&&(mn>15))
                      {
                        key_flag = 1;
                        KEY_VALUE =  VOL_B;
                      }
                      key_status = key_status | 0x84;
                    }
C51 COMPILER V9.56.0.0   TIMER0                                                            01/12/2018 13:51:22 PAGE 4   

                    else if(adc_V > V_1_2)
                    {
              //        if(key_status&0x08)
              //        {
              //          key_flag = 1;
              //          KEY_VALUE = SOURCE;
              //        }
                      key_status = key_status | 0x88;
                    }
                    else if(adc_V > V_0_7)
                    {
              //        if(key_status&0x10)
              //        {
              //          key_flag = 1;
              //          KEY_VALUE = MODE;         
              //        }
                      key_status = key_status | 0x90;
                    }
                  }
                  else
                  {
                    if(key_status&0x80)
                    {
                      if(key_status&0x01)
                      {
                        key_flag = 1;
                        KEY_VALUE =  POWER;
                      } 
                      if(key_status&0x02)
                      {
                        key_flag = 1;
                        KEY_VALUE =  VOL_A;
                      }
                      if(key_status&0x04)
                      {
                        key_flag = 1;
                        KEY_VALUE =  VOL_B;
                      }
                      if(key_status&0x08)
                      {
                        key_flag = 1;
                        KEY_VALUE = SOURCE;
                      }
                      if(key_status&0x10)
                      {
                        key_flag = 1;
                        KEY_VALUE = MODE;         
                      }
                    }
                    key_status = key_status & 0x00;//key up
                    mn = 0;
                  }
                  adc_flag = 0;
                }
                #endif
 234   1        set_TR0;
 235   1      }
 236          
 237          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.56.0.0   TIMER0                                                            01/12/2018 13:51:22 PAGE 5   

   CODE SIZE        =    277    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
